/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_cpsmodule_WRAP_H_
#define SWIG_cpsmodule_WRAP_H_

class SwigDirector_CpsCallback : public CpsCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_CpsCallback(JNIEnv *jenv);
    virtual ~SwigDirector_CpsCallback();
    virtual void read_ParticipantDomain(monitoring_ParticipantDomain a_ParticipantDomain_data);
    virtual void read_Topic(monitoring_Topic a_Topic_data);
    virtual void read_Publisher(monitoring_Publisher a_Publisher_data);
    virtual void read_Subscriber(monitoring_Subscriber a_Subscriber_data);
    virtual void read_DataWriter(monitoring_DataWriter a_DataWriter_data);
    virtual void read_DataReader(monitoring_DataReader a_DataReader_data);
    virtual void read_DataBandwidth(monitoring_DataBandwidth a_DataBandwidth_data);
    virtual void read_WriterProxy(monitoring_WriterProxy a_WriterProxy_data);
    virtual void read_ReaderProxy(monitoring_ReaderProxy a_ReaderProxy_data);
    virtual void read_WarningErrorConditions(monitoring_WarningErrorConditions a_WarningErrorConditions_data);
    virtual void read_SamplesinforamtionReader(monitoring_SamplesinforamtionReader a_SamplesinforamtionReader_data);
    virtual void read_SamplesinforamtionWriter(monitoring_SamplesinforamtionWriter a_SamplesinforamtionWriter_data);
public:
    bool swig_overrides(int n) {
      return (n < 12 ? swig_override[n] : false);
    }
protected:
    bool swig_override[12];
};


#endif
