/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class DataReaderListener2 : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal DataReaderListener2(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(DataReaderListener2 obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~DataReaderListener2() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cpscsharpmodulePINVOKE.delete_DataReaderListener2(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public DataReaderListener2(DataReaderListener p_listener) : this(cpscsharpmodulePINVOKE.new_DataReaderListener2__SWIG_0(DataReaderListener.getCPtr(p_listener)), true) {
  }

  public DataReaderListener2() : this(cpscsharpmodulePINVOKE.new_DataReaderListener2__SWIG_1(), true) {
  }

  public DataReaderListener getListener() {
    DataReaderListener ret = new DataReaderListener(cpscsharpmodulePINVOKE.DataReaderListener2_getListener(swigCPtr), true);
    return ret;
  }

  public DataReaderListener getListenerPtr() {
    IntPtr cPtr = cpscsharpmodulePINVOKE.DataReaderListener2_getListenerPtr(swigCPtr);
    DataReaderListener ret = (cPtr == IntPtr.Zero) ? null : new DataReaderListener(cPtr, false);
    return ret;
  }

  public void setCallback(DataReaderListenerCallBack cb) {
    cpscsharpmodulePINVOKE.DataReaderListener2_setCallback(swigCPtr, DataReaderListenerCallBack.getCPtr(cb));
  }

  public static DataReaderListenerCallBack _callback {
    set {
      cpscsharpmodulePINVOKE.DataReaderListener2__callback_set(DataReaderListenerCallBack.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.DataReaderListener2__callback_get();
      DataReaderListenerCallBack ret = (cPtr == IntPtr.Zero) ? null : new DataReaderListenerCallBack(cPtr, false);
      return ret;
    } 
  }

}
