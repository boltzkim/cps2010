/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ConditionSeq2 : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ConditionSeq2(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ConditionSeq2 obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ConditionSeq2() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cpscsharpmodulePINVOKE.delete_ConditionSeq2(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public ConditionSeq2() : this(cpscsharpmodulePINVOKE.new_ConditionSeq2(), true) {
  }

  public ConditionSeq getConditionSeq() {
    ConditionSeq ret = new ConditionSeq(cpscsharpmodulePINVOKE.ConditionSeq2_getConditionSeq(swigCPtr), true);
    return ret;
  }

  public ConditionSeq getConditionSeqPtr() {
    IntPtr cPtr = cpscsharpmodulePINVOKE.ConditionSeq2_getConditionSeqPtr(swigCPtr);
    ConditionSeq ret = (cPtr == IntPtr.Zero) ? null : new ConditionSeq(cPtr, false);
    return ret;
  }

}
