/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class DataWriter2 : Entity2 {
  private HandleRef swigCPtr;

  internal DataWriter2(IntPtr cPtr, bool cMemoryOwn) : base(cpscsharpmodulePINVOKE.DataWriter2_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(DataWriter2 obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~DataWriter2() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cpscsharpmodulePINVOKE.delete_DataWriter2(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public DataWriter2(DataWriter dataWriter) : this(cpscsharpmodulePINVOKE.new_DataWriter2(DataWriter.getCPtr(dataWriter)), true) {
  }

  public DataWriter getDataWriter() {
    IntPtr cPtr = cpscsharpmodulePINVOKE.DataWriter2_getDataWriter(swigCPtr);
    DataWriter ret = (cPtr == IntPtr.Zero) ? null : new DataWriter(cPtr, false);
    return ret;
  }

  public int set_qos(DataWriterQos qos) {
    int ret = cpscsharpmodulePINVOKE.DataWriter2_set_qos(swigCPtr, DataWriterQos.getCPtr(qos));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int get_qos(DataWriterQos qos) {
    int ret = cpscsharpmodulePINVOKE.DataWriter2_get_qos(swigCPtr, DataWriterQos.getCPtr(qos));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int set_listener(DataWriterListener2 listener, uint mask) {
    int ret = cpscsharpmodulePINVOKE.DataWriter2_set_listener(swigCPtr, DataWriterListener2.getCPtr(listener), mask);
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public DataWriterListener2 get_listener() {
    DataWriterListener2 ret = new DataWriterListener2(cpscsharpmodulePINVOKE.DataWriter2_get_listener(swigCPtr), true);
    return ret;
  }

  public Topic2 get_topic() {
    Topic2 ret = new Topic2(cpscsharpmodulePINVOKE.DataWriter2_get_topic(swigCPtr), true);
    return ret;
  }

  public Publisher2 get_publisher() {
    Publisher2 ret = new Publisher2(cpscsharpmodulePINVOKE.DataWriter2_get_publisher(swigCPtr), true);
    return ret;
  }

  public int wait_for_acknowledgments(Duration_t max_wait) {
    int ret = cpscsharpmodulePINVOKE.DataWriter2_wait_for_acknowledgments(swigCPtr, Duration_t.getCPtr(max_wait));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int get_liveliness_lost_status(LivelinessLostStatus status) {
    int ret = cpscsharpmodulePINVOKE.DataWriter2_get_liveliness_lost_status(swigCPtr, LivelinessLostStatus.getCPtr(status));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int get_offered_deadline_missed_status(OfferedDeadlineMissedStatus status) {
    int ret = cpscsharpmodulePINVOKE.DataWriter2_get_offered_deadline_missed_status(swigCPtr, OfferedDeadlineMissedStatus.getCPtr(status));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int get_offered_incompatible_qos_status(OfferedIncompatibleQosStatus status) {
    int ret = cpscsharpmodulePINVOKE.DataWriter2_get_offered_incompatible_qos_status(swigCPtr, OfferedIncompatibleQosStatus.getCPtr(status));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int get_publication_matched_status(PublicationMatchedStatus status) {
    int ret = cpscsharpmodulePINVOKE.DataWriter2_get_publication_matched_status(swigCPtr, PublicationMatchedStatus.getCPtr(status));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int assert_liveliness() {
    int ret = cpscsharpmodulePINVOKE.DataWriter2_assert_liveliness(swigCPtr);
    return ret;
  }

  public int get_matched_subscriptions(InstanceHandleSeq subscription_handles) {
    int ret = cpscsharpmodulePINVOKE.DataWriter2_get_matched_subscriptions(swigCPtr, InstanceHandleSeq.getCPtr(subscription_handles));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int get_matched_subscription_data(SubscriptionBuiltinTopicData subscription_data, int subscription_handle) {
    int ret = cpscsharpmodulePINVOKE.DataWriter2_get_matched_subscription_data(swigCPtr, SubscriptionBuiltinTopicData.getCPtr(subscription_data), subscription_handle);
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
