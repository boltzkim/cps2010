/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class SampleInfoSeq2 : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SampleInfoSeq2(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SampleInfoSeq2 obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SampleInfoSeq2() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cpscsharpmodulePINVOKE.delete_SampleInfoSeq2(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public SampleInfoSeq2() : this(cpscsharpmodulePINVOKE.new_SampleInfoSeq2(), true) {
  }

  public SampleInfoSeq getSampleInfoSeq() {
    SampleInfoSeq ret = new SampleInfoSeq(cpscsharpmodulePINVOKE.SampleInfoSeq2_getSampleInfoSeq(swigCPtr), true);
    return ret;
  }

  public SampleInfoSeq getSampleInfoSeqPtr() {
    IntPtr cPtr = cpscsharpmodulePINVOKE.SampleInfoSeq2_getSampleInfoSeqPtr(swigCPtr);
    SampleInfoSeq ret = (cPtr == IntPtr.Zero) ? null : new SampleInfoSeq(cPtr, false);
    return ret;
  }

}
