/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class FooDataWriter2 : DataWriter2 {
  private HandleRef swigCPtr;

  internal FooDataWriter2(IntPtr cPtr, bool cMemoryOwn) : base(cpscsharpmodulePINVOKE.FooDataWriter2_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(FooDataWriter2 obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~FooDataWriter2() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cpscsharpmodulePINVOKE.delete_FooDataWriter2(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public FooDataWriter2(FooDataWriter fooDataWriter) : this(cpscsharpmodulePINVOKE.new_FooDataWriter2(FooDataWriter.getCPtr(fooDataWriter)), true) {
  }

  public FooDataWriter getFooDataWriter() {
    IntPtr cPtr = cpscsharpmodulePINVOKE.FooDataWriter2_getFooDataWriter(swigCPtr);
    FooDataWriter ret = (cPtr == IntPtr.Zero) ? null : new FooDataWriter(cPtr, false);
    return ret;
  }

  public int register_instance(Foo2 instance_data) {
    int ret = cpscsharpmodulePINVOKE.FooDataWriter2_register_instance(swigCPtr, Foo2.getCPtr(instance_data));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int register_instance_w_timestamp(FooDataWriter fooDataWriter, Foo2 instance_data, Time_t source_timestamp) {
    int ret = cpscsharpmodulePINVOKE.FooDataWriter2_register_instance_w_timestamp(swigCPtr, FooDataWriter.getCPtr(fooDataWriter), Foo2.getCPtr(instance_data), Time_t.getCPtr(source_timestamp));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int unregister_instance(Foo2 instance_data, int handle) {
    int ret = cpscsharpmodulePINVOKE.FooDataWriter2_unregister_instance(swigCPtr, Foo2.getCPtr(instance_data), handle);
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int unregister_instance_w_timestamp(Foo2 instance_data, int handle, Time_t source_timestamp) {
    int ret = cpscsharpmodulePINVOKE.FooDataWriter2_unregister_instance_w_timestamp(swigCPtr, Foo2.getCPtr(instance_data), handle, Time_t.getCPtr(source_timestamp));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int write(Foo2 instance_data, int handle) {
    int ret = cpscsharpmodulePINVOKE.FooDataWriter2_write(swigCPtr, Foo2.getCPtr(instance_data), handle);
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int write_w_timestamp(Foo2 instance_data, int handle, Time_t source_timestamp) {
    int ret = cpscsharpmodulePINVOKE.FooDataWriter2_write_w_timestamp(swigCPtr, Foo2.getCPtr(instance_data), handle, Time_t.getCPtr(source_timestamp));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int dispose(Foo2 instance_data, int instance_handle) {
    int ret = cpscsharpmodulePINVOKE.FooDataWriter2_dispose(swigCPtr, Foo2.getCPtr(instance_data), instance_handle);
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int dispose_w_timestamp(Foo2 instance_data, int instance_handle, Time_t source_timestamp) {
    int ret = cpscsharpmodulePINVOKE.FooDataWriter2_dispose_w_timestamp(swigCPtr, Foo2.getCPtr(instance_data), instance_handle, Time_t.getCPtr(source_timestamp));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int get_key_value(Foo2 key_holder, int handle) {
    int ret = cpscsharpmodulePINVOKE.FooDataWriter2_get_key_value(swigCPtr, Foo2.getCPtr(key_holder), handle);
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int lookup_instance(Foo2 key_holder) {
    int ret = cpscsharpmodulePINVOKE.FooDataWriter2_lookup_instance(swigCPtr, Foo2.getCPtr(key_holder));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
