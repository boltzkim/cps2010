/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class DataReaderQos : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal DataReaderQos(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(DataReaderQos obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~DataReaderQos() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cpscsharpmodulePINVOKE.delete_DataReaderQos(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public DurabilityQosPolicy durability {
    set {
      cpscsharpmodulePINVOKE.DataReaderQos_durability_set(swigCPtr, DurabilityQosPolicy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.DataReaderQos_durability_get(swigCPtr);
      DurabilityQosPolicy ret = (cPtr == IntPtr.Zero) ? null : new DurabilityQosPolicy(cPtr, false);
      return ret;
    } 
  }

  public DeadlineQosPolicy deadline {
    set {
      cpscsharpmodulePINVOKE.DataReaderQos_deadline_set(swigCPtr, DeadlineQosPolicy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.DataReaderQos_deadline_get(swigCPtr);
      DeadlineQosPolicy ret = (cPtr == IntPtr.Zero) ? null : new DeadlineQosPolicy(cPtr, false);
      return ret;
    } 
  }

  public LatencyBudgetQosPolicy latency_budget {
    set {
      cpscsharpmodulePINVOKE.DataReaderQos_latency_budget_set(swigCPtr, LatencyBudgetQosPolicy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.DataReaderQos_latency_budget_get(swigCPtr);
      LatencyBudgetQosPolicy ret = (cPtr == IntPtr.Zero) ? null : new LatencyBudgetQosPolicy(cPtr, false);
      return ret;
    } 
  }

  public LivelinessQosPolicy liveliness {
    set {
      cpscsharpmodulePINVOKE.DataReaderQos_liveliness_set(swigCPtr, LivelinessQosPolicy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.DataReaderQos_liveliness_get(swigCPtr);
      LivelinessQosPolicy ret = (cPtr == IntPtr.Zero) ? null : new LivelinessQosPolicy(cPtr, false);
      return ret;
    } 
  }

  public ReliabilityQosPolicy reliability {
    set {
      cpscsharpmodulePINVOKE.DataReaderQos_reliability_set(swigCPtr, ReliabilityQosPolicy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.DataReaderQos_reliability_get(swigCPtr);
      ReliabilityQosPolicy ret = (cPtr == IntPtr.Zero) ? null : new ReliabilityQosPolicy(cPtr, false);
      return ret;
    } 
  }

  public DestinationOrderQosPolicy destination_order {
    set {
      cpscsharpmodulePINVOKE.DataReaderQos_destination_order_set(swigCPtr, DestinationOrderQosPolicy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.DataReaderQos_destination_order_get(swigCPtr);
      DestinationOrderQosPolicy ret = (cPtr == IntPtr.Zero) ? null : new DestinationOrderQosPolicy(cPtr, false);
      return ret;
    } 
  }

  public HistoryQosPolicy history {
    set {
      cpscsharpmodulePINVOKE.DataReaderQos_history_set(swigCPtr, HistoryQosPolicy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.DataReaderQos_history_get(swigCPtr);
      HistoryQosPolicy ret = (cPtr == IntPtr.Zero) ? null : new HistoryQosPolicy(cPtr, false);
      return ret;
    } 
  }

  public ResourceLimitsQosPolicy resource_limits {
    set {
      cpscsharpmodulePINVOKE.DataReaderQos_resource_limits_set(swigCPtr, ResourceLimitsQosPolicy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.DataReaderQos_resource_limits_get(swigCPtr);
      ResourceLimitsQosPolicy ret = (cPtr == IntPtr.Zero) ? null : new ResourceLimitsQosPolicy(cPtr, false);
      return ret;
    } 
  }

  public UserDataQosPolicy user_data {
    set {
      cpscsharpmodulePINVOKE.DataReaderQos_user_data_set(swigCPtr, UserDataQosPolicy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.DataReaderQos_user_data_get(swigCPtr);
      UserDataQosPolicy ret = (cPtr == IntPtr.Zero) ? null : new UserDataQosPolicy(cPtr, false);
      return ret;
    } 
  }

  public OwnershipQosPolicy ownership {
    set {
      cpscsharpmodulePINVOKE.DataReaderQos_ownership_set(swigCPtr, OwnershipQosPolicy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.DataReaderQos_ownership_get(swigCPtr);
      OwnershipQosPolicy ret = (cPtr == IntPtr.Zero) ? null : new OwnershipQosPolicy(cPtr, false);
      return ret;
    } 
  }

  public TimeBasedFilterQosPolicy time_based_filter {
    set {
      cpscsharpmodulePINVOKE.DataReaderQos_time_based_filter_set(swigCPtr, TimeBasedFilterQosPolicy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.DataReaderQos_time_based_filter_get(swigCPtr);
      TimeBasedFilterQosPolicy ret = (cPtr == IntPtr.Zero) ? null : new TimeBasedFilterQosPolicy(cPtr, false);
      return ret;
    } 
  }

  public ReaderDataLifecycleQosPolicy reader_data_lifecycle {
    set {
      cpscsharpmodulePINVOKE.DataReaderQos_reader_data_lifecycle_set(swigCPtr, ReaderDataLifecycleQosPolicy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.DataReaderQos_reader_data_lifecycle_get(swigCPtr);
      ReaderDataLifecycleQosPolicy ret = (cPtr == IntPtr.Zero) ? null : new ReaderDataLifecycleQosPolicy(cPtr, false);
      return ret;
    } 
  }

  public DataReaderQos() : this(cpscsharpmodulePINVOKE.new_DataReaderQos(), true) {
  }

}
