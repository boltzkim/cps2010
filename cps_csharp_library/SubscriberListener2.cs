/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class SubscriberListener2 : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SubscriberListener2(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SubscriberListener2 obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SubscriberListener2() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cpscsharpmodulePINVOKE.delete_SubscriberListener2(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public SubscriberListener2(SubscriberListener p_listener) : this(cpscsharpmodulePINVOKE.new_SubscriberListener2__SWIG_0(SubscriberListener.getCPtr(p_listener)), true) {
  }

  public SubscriberListener2() : this(cpscsharpmodulePINVOKE.new_SubscriberListener2__SWIG_1(), true) {
  }

  public SubscriberListener getListener() {
    SubscriberListener ret = new SubscriberListener(cpscsharpmodulePINVOKE.SubscriberListener2_getListener(swigCPtr), true);
    return ret;
  }

  public SubscriberListener getListenerPtr() {
    IntPtr cPtr = cpscsharpmodulePINVOKE.SubscriberListener2_getListenerPtr(swigCPtr);
    SubscriberListener ret = (cPtr == IntPtr.Zero) ? null : new SubscriberListener(cPtr, false);
    return ret;
  }

  public void setCallback(SubscriberListenerCallBack cb) {
    cpscsharpmodulePINVOKE.SubscriberListener2_setCallback(swigCPtr, SubscriberListenerCallBack.getCPtr(cb));
  }

  public static SubscriberListenerCallBack _callback {
    set {
      cpscsharpmodulePINVOKE.SubscriberListener2__callback_set(SubscriberListenerCallBack.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.SubscriberListener2__callback_get();
      SubscriberListenerCallBack ret = (cPtr == IntPtr.Zero) ? null : new SubscriberListenerCallBack(cPtr, false);
      return ret;
    } 
  }

}
