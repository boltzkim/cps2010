/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class SampleInfo : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SampleInfo(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SampleInfo obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SampleInfo() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cpscsharpmodulePINVOKE.delete_SampleInfo(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public uint sample_state {
    set {
      cpscsharpmodulePINVOKE.SampleInfo_sample_state_set(swigCPtr, value);
    } 
    get {
      uint ret = cpscsharpmodulePINVOKE.SampleInfo_sample_state_get(swigCPtr);
      return ret;
    } 
  }

  public uint view_state {
    set {
      cpscsharpmodulePINVOKE.SampleInfo_view_state_set(swigCPtr, value);
    } 
    get {
      uint ret = cpscsharpmodulePINVOKE.SampleInfo_view_state_get(swigCPtr);
      return ret;
    } 
  }

  public uint instance_state {
    set {
      cpscsharpmodulePINVOKE.SampleInfo_instance_state_set(swigCPtr, value);
    } 
    get {
      uint ret = cpscsharpmodulePINVOKE.SampleInfo_instance_state_get(swigCPtr);
      return ret;
    } 
  }

  public Time_t source_timestamp {
    set {
      cpscsharpmodulePINVOKE.SampleInfo_source_timestamp_set(swigCPtr, Time_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.SampleInfo_source_timestamp_get(swigCPtr);
      Time_t ret = (cPtr == IntPtr.Zero) ? null : new Time_t(cPtr, false);
      return ret;
    } 
  }

  public int instance_handle {
    set {
      cpscsharpmodulePINVOKE.SampleInfo_instance_handle_set(swigCPtr, value);
    } 
    get {
      int ret = cpscsharpmodulePINVOKE.SampleInfo_instance_handle_get(swigCPtr);
      return ret;
    } 
  }

  public int publication_handle {
    set {
      cpscsharpmodulePINVOKE.SampleInfo_publication_handle_set(swigCPtr, value);
    } 
    get {
      int ret = cpscsharpmodulePINVOKE.SampleInfo_publication_handle_get(swigCPtr);
      return ret;
    } 
  }

  public int disposed_generation_count {
    set {
      cpscsharpmodulePINVOKE.SampleInfo_disposed_generation_count_set(swigCPtr, value);
    } 
    get {
      int ret = cpscsharpmodulePINVOKE.SampleInfo_disposed_generation_count_get(swigCPtr);
      return ret;
    } 
  }

  public int no_writers_generation_count {
    set {
      cpscsharpmodulePINVOKE.SampleInfo_no_writers_generation_count_set(swigCPtr, value);
    } 
    get {
      int ret = cpscsharpmodulePINVOKE.SampleInfo_no_writers_generation_count_get(swigCPtr);
      return ret;
    } 
  }

  public int sample_rank {
    set {
      cpscsharpmodulePINVOKE.SampleInfo_sample_rank_set(swigCPtr, value);
    } 
    get {
      int ret = cpscsharpmodulePINVOKE.SampleInfo_sample_rank_get(swigCPtr);
      return ret;
    } 
  }

  public int generation_rank {
    set {
      cpscsharpmodulePINVOKE.SampleInfo_generation_rank_set(swigCPtr, value);
    } 
    get {
      int ret = cpscsharpmodulePINVOKE.SampleInfo_generation_rank_get(swigCPtr);
      return ret;
    } 
  }

  public int absolute_generation_rank {
    set {
      cpscsharpmodulePINVOKE.SampleInfo_absolute_generation_rank_set(swigCPtr, value);
    } 
    get {
      int ret = cpscsharpmodulePINVOKE.SampleInfo_absolute_generation_rank_get(swigCPtr);
      return ret;
    } 
  }

  public bool valid_data {
    set {
      cpscsharpmodulePINVOKE.SampleInfo_valid_data_set(swigCPtr, value);
    } 
    get {
      bool ret = cpscsharpmodulePINVOKE.SampleInfo_valid_data_get(swigCPtr);
      return ret;
    } 
  }

  public Time_t disposed_timestamp {
    set {
      cpscsharpmodulePINVOKE.SampleInfo_disposed_timestamp_set(swigCPtr, Time_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.SampleInfo_disposed_timestamp_get(swigCPtr);
      Time_t ret = (cPtr == IntPtr.Zero) ? null : new Time_t(cPtr, false);
      return ret;
    } 
  }

  public SampleInfo() : this(cpscsharpmodulePINVOKE.new_SampleInfo(), true) {
  }

}
