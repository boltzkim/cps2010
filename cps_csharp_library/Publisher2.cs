/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class Publisher2 : Entity2 {
  private HandleRef swigCPtr;

  internal Publisher2(IntPtr cPtr, bool cMemoryOwn) : base(cpscsharpmodulePINVOKE.Publisher2_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Publisher2 obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Publisher2() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cpscsharpmodulePINVOKE.delete_Publisher2(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public Publisher2(Publisher publisher) : this(cpscsharpmodulePINVOKE.new_Publisher2(Publisher.getCPtr(publisher)), true) {
  }

  public Publisher getPublisher() {
    IntPtr cPtr = cpscsharpmodulePINVOKE.Publisher2_getPublisher(swigCPtr);
    Publisher ret = (cPtr == IntPtr.Zero) ? null : new Publisher(cPtr, false);
    return ret;
  }

  public FooDataWriter2 create_datawriter(Topic2 topic, DataWriterQos qos, DataWriterListener2 listener, uint mask) {
    FooDataWriter2 ret = new FooDataWriter2(cpscsharpmodulePINVOKE.Publisher2_create_datawriter(swigCPtr, Topic2.getCPtr(topic), DataWriterQos.getCPtr(qos), DataWriterListener2.getCPtr(listener), mask), true);
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int delete_datawriter(DataWriter2 datawriter) {
    int ret = cpscsharpmodulePINVOKE.Publisher2_delete_datawriter(swigCPtr, DataWriter2.getCPtr(datawriter));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FooDataWriter2 lookup_datawriter(string topic_name) {
    FooDataWriter2 ret = new FooDataWriter2(cpscsharpmodulePINVOKE.Publisher2_lookup_datawriter(swigCPtr, topic_name), true);
    return ret;
  }

  public int delete_contained_entities() {
    int ret = cpscsharpmodulePINVOKE.Publisher2_delete_contained_entities(swigCPtr);
    return ret;
  }

  public int set_qos(PublisherQos qos) {
    int ret = cpscsharpmodulePINVOKE.Publisher2_set_qos(swigCPtr, PublisherQos.getCPtr(qos));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int get_qos(PublisherQos qos) {
    int ret = cpscsharpmodulePINVOKE.Publisher2_get_qos(swigCPtr, PublisherQos.getCPtr(qos));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int set_listener(PublisherListener2 listener, uint mask) {
    int ret = cpscsharpmodulePINVOKE.Publisher2_set_listener(swigCPtr, PublisherListener2.getCPtr(listener), mask);
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PublisherListener2 get_listener() {
    PublisherListener2 ret = new PublisherListener2(cpscsharpmodulePINVOKE.Publisher2_get_listener(swigCPtr), true);
    return ret;
  }

  public int suspend_publications() {
    int ret = cpscsharpmodulePINVOKE.Publisher2_suspend_publications(swigCPtr);
    return ret;
  }

  public int resume_publications() {
    int ret = cpscsharpmodulePINVOKE.Publisher2_resume_publications(swigCPtr);
    return ret;
  }

  public int begin_coherent_changes() {
    int ret = cpscsharpmodulePINVOKE.Publisher2_begin_coherent_changes(swigCPtr);
    return ret;
  }

  public int end_coherent_changes() {
    int ret = cpscsharpmodulePINVOKE.Publisher2_end_coherent_changes(swigCPtr);
    return ret;
  }

  public int wait_for_acknowledgments(Duration_t max_wait) {
    int ret = cpscsharpmodulePINVOKE.Publisher2_wait_for_acknowledgments(swigCPtr, Duration_t.getCPtr(max_wait));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public DomainParticipant2 get_participant() {
    DomainParticipant2 ret = new DomainParticipant2(cpscsharpmodulePINVOKE.Publisher2_get_participant(swigCPtr), true);
    return ret;
  }

  public int set_default_datawriter_qos(DataWriterQos qos) {
    int ret = cpscsharpmodulePINVOKE.Publisher2_set_default_datawriter_qos(swigCPtr, DataWriterQos.getCPtr(qos));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int get_default_datawriter_qos(DataWriterQos qos) {
    int ret = cpscsharpmodulePINVOKE.Publisher2_get_default_datawriter_qos(swigCPtr, DataWriterQos.getCPtr(qos));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int copy_from_topic_qos(DataWriterQos datawriter_qos, TopicQos topic_qos) {
    int ret = cpscsharpmodulePINVOKE.Publisher2_copy_from_topic_qos(swigCPtr, DataWriterQos.getCPtr(datawriter_qos), TopicQos.getCPtr(topic_qos));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
