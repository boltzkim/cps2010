/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class SubscriberQos : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SubscriberQos(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SubscriberQos obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SubscriberQos() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cpscsharpmodulePINVOKE.delete_SubscriberQos(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public PresentationQosPolicy presentation {
    set {
      cpscsharpmodulePINVOKE.SubscriberQos_presentation_set(swigCPtr, PresentationQosPolicy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.SubscriberQos_presentation_get(swigCPtr);
      PresentationQosPolicy ret = (cPtr == IntPtr.Zero) ? null : new PresentationQosPolicy(cPtr, false);
      return ret;
    } 
  }

  public PartitionQosPolicy partition {
    set {
      cpscsharpmodulePINVOKE.SubscriberQos_partition_set(swigCPtr, PartitionQosPolicy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.SubscriberQos_partition_get(swigCPtr);
      PartitionQosPolicy ret = (cPtr == IntPtr.Zero) ? null : new PartitionQosPolicy(cPtr, false);
      return ret;
    } 
  }

  public GroupDataQosPolicy group_data {
    set {
      cpscsharpmodulePINVOKE.SubscriberQos_group_data_set(swigCPtr, GroupDataQosPolicy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.SubscriberQos_group_data_get(swigCPtr);
      GroupDataQosPolicy ret = (cPtr == IntPtr.Zero) ? null : new GroupDataQosPolicy(cPtr, false);
      return ret;
    } 
  }

  public EntityFactoryQosPolicy entity_factory {
    set {
      cpscsharpmodulePINVOKE.SubscriberQos_entity_factory_set(swigCPtr, EntityFactoryQosPolicy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = cpscsharpmodulePINVOKE.SubscriberQos_entity_factory_get(swigCPtr);
      EntityFactoryQosPolicy ret = (cPtr == IntPtr.Zero) ? null : new EntityFactoryQosPolicy(cPtr, false);
      return ret;
    } 
  }

  public SubscriberQos() : this(cpscsharpmodulePINVOKE.new_SubscriberQos(), true) {
  }

}
