/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class Topic2 : Entity2 {
  private HandleRef swigCPtr;

  internal Topic2(IntPtr cPtr, bool cMemoryOwn) : base(cpscsharpmodulePINVOKE.Topic2_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Topic2 obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Topic2() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cpscsharpmodulePINVOKE.delete_Topic2(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public Topic2(Topic topic) : this(cpscsharpmodulePINVOKE.new_Topic2(Topic.getCPtr(topic)), true) {
  }

  public Topic getTopic() {
    IntPtr cPtr = cpscsharpmodulePINVOKE.Topic2_getTopic(swigCPtr);
    Topic ret = (cPtr == IntPtr.Zero) ? null : new Topic(cPtr, false);
    return ret;
  }

  public int set_qos(TopicQos qos) {
    int ret = cpscsharpmodulePINVOKE.Topic2_set_qos(swigCPtr, TopicQos.getCPtr(qos));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int get_qos(TopicQos qos) {
    int ret = cpscsharpmodulePINVOKE.Topic2_get_qos(swigCPtr, TopicQos.getCPtr(qos));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int set_listener(TopicListener2 listener, uint mask) {
    int ret = cpscsharpmodulePINVOKE.Topic2_set_listener(swigCPtr, TopicListener2.getCPtr(listener), mask);
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public TopicListener2 get_listener() {
    TopicListener2 ret = new TopicListener2(cpscsharpmodulePINVOKE.Topic2_get_listener(swigCPtr), true);
    return ret;
  }

  public int get_inconsistent_topic_status(InconsistentTopicStatus a_status) {
    int ret = cpscsharpmodulePINVOKE.Topic2_get_inconsistent_topic_status(swigCPtr, InconsistentTopicStatus.getCPtr(a_status));
    if (cpscsharpmodulePINVOKE.SWIGPendingException.Pending) throw cpscsharpmodulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
