/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package kr.re.etri.cps.jni;

public class FooDataReader2 extends DataReader2 {
  private long swigCPtr;

  protected FooDataReader2(long cPtr, boolean cMemoryOwn) {
    super(cpsjavamoduleJNI.FooDataReader2_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FooDataReader2 obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        cpsjavamoduleJNI.delete_FooDataReader2(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public FooDataReader2(FooDataReader fooDataReader) {
    this(cpsjavamoduleJNI.new_FooDataReader2(FooDataReader.getCPtr(fooDataReader), fooDataReader), true);
  }

  public FooDataReader getFooDataReader() {
    long cPtr = cpsjavamoduleJNI.FooDataReader2_getFooDataReader(swigCPtr, this);
    return (cPtr == 0) ? null : new FooDataReader(cPtr, false);
  }

  public int read(FooSeq2 data_values, SampleInfoSeq2 sample_infos, int max_samples, long sample_states, long view_states, long instance_states) {
    return cpsjavamoduleJNI.FooDataReader2_read__SWIG_0(swigCPtr, this, FooSeq2.getCPtr(data_values), data_values, SampleInfoSeq2.getCPtr(sample_infos), sample_infos, max_samples, sample_states, view_states, instance_states);
  }

  public int take(FooSeq2 data_values, SampleInfoSeq2 sample_infos, int max_samples, long sample_states, long view_states, long instance_states) {
    return cpsjavamoduleJNI.FooDataReader2_take(swigCPtr, this, FooSeq2.getCPtr(data_values), data_values, SampleInfoSeq2.getCPtr(sample_infos), sample_infos, max_samples, sample_states, view_states, instance_states);
  }

  public int read_w_condition(FooSeq2 data_values, SampleInfoSeq2 sample_infos, int max_samples, ReadCondition2 condition) {
    return cpsjavamoduleJNI.FooDataReader2_read_w_condition(swigCPtr, this, FooSeq2.getCPtr(data_values), data_values, SampleInfoSeq2.getCPtr(sample_infos), sample_infos, max_samples, ReadCondition2.getCPtr(condition), condition);
  }

  public int take_w_condition(FooSeq2 data_values, SampleInfoSeq2 sample_infos, int max_samples, ReadCondition2 condition) {
    return cpsjavamoduleJNI.FooDataReader2_take_w_condition(swigCPtr, this, FooSeq2.getCPtr(data_values), data_values, SampleInfoSeq2.getCPtr(sample_infos), sample_infos, max_samples, ReadCondition2.getCPtr(condition), condition);
  }

  public int read_next_sample(Foo2 data_value, SampleInfo2 sample_info) {
    return cpsjavamoduleJNI.FooDataReader2_read_next_sample(swigCPtr, this, Foo2.getCPtr(data_value), data_value, SampleInfo2.getCPtr(sample_info), sample_info);
  }

  public int take_next_sample(Foo2 data_value, SampleInfo2 sample_info) {
    return cpsjavamoduleJNI.FooDataReader2_take_next_sample(swigCPtr, this, Foo2.getCPtr(data_value), data_value, SampleInfo2.getCPtr(sample_info), sample_info);
  }

  public int read_instance(FooSeq2 data_values, SampleInfoSeq2 sample_infos, int max_samples, int a_handle, long sample_states, long view_states, long instance_states) {
    return cpsjavamoduleJNI.FooDataReader2_read_instance(swigCPtr, this, FooSeq2.getCPtr(data_values), data_values, SampleInfoSeq2.getCPtr(sample_infos), sample_infos, max_samples, a_handle, sample_states, view_states, instance_states);
  }

  public int take_instance(FooSeq2 data_values, SampleInfoSeq2 sample_infos, int max_samples, int a_handle, long sample_states, long view_states, long instance_states) {
    return cpsjavamoduleJNI.FooDataReader2_take_instance(swigCPtr, this, FooSeq2.getCPtr(data_values), data_values, SampleInfoSeq2.getCPtr(sample_infos), sample_infos, max_samples, a_handle, sample_states, view_states, instance_states);
  }

  public int read_next_instance(FooSeq2 data_values, SampleInfoSeq2 sample_infos, int max_samples, SWIGTYPE_p_long previous_handle, long sample_states, long view_states, long instance_states) {
    return cpsjavamoduleJNI.FooDataReader2_read_next_instance(swigCPtr, this, FooSeq2.getCPtr(data_values), data_values, SampleInfoSeq2.getCPtr(sample_infos), sample_infos, max_samples, SWIGTYPE_p_long.getCPtr(previous_handle), sample_states, view_states, instance_states);
  }

  public int take_next_instance(FooSeq2 data_values, SampleInfoSeq2 sample_infos, int max_samples, SWIGTYPE_p_long previous_handle, long sample_states, long view_states, long instance_states) {
    return cpsjavamoduleJNI.FooDataReader2_take_next_instance(swigCPtr, this, FooSeq2.getCPtr(data_values), data_values, SampleInfoSeq2.getCPtr(sample_infos), sample_infos, max_samples, SWIGTYPE_p_long.getCPtr(previous_handle), sample_states, view_states, instance_states);
  }

  public int get_key_value(Foo2 key_holder, int handle) {
    return cpsjavamoduleJNI.FooDataReader2_get_key_value(swigCPtr, this, Foo2.getCPtr(key_holder), key_holder, handle);
  }

  public int lookup_instance(Foo2 key_holder) {
    return cpsjavamoduleJNI.FooDataReader2_lookup_instance(swigCPtr, this, Foo2.getCPtr(key_holder), key_holder);
  }

  public int read(FooSeq data_values, SampleInfoSeq sample_infos, int max_samples, long sample_states, long view_states, long instance_states) {
    return cpsjavamoduleJNI.FooDataReader2_read__SWIG_1(swigCPtr, this, FooSeq.getCPtr(data_values), data_values, SampleInfoSeq.getCPtr(sample_infos), sample_infos, max_samples, sample_states, view_states, instance_states);
  }

}
