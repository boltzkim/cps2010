/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package kr.re.etri.cps.jni;

public class WaitSet2 {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected WaitSet2(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(WaitSet2 obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        cpsjavamoduleJNI.delete_WaitSet2(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public WaitSet2() {
    this(cpsjavamoduleJNI.new_WaitSet2__SWIG_0(), true);
  }

  public WaitSet2(WaitSet waitset) {
    this(cpsjavamoduleJNI.new_WaitSet2__SWIG_1(WaitSet.getCPtr(waitset), waitset), true);
  }

  public WaitSet getWaitSet() {
    long cPtr = cpsjavamoduleJNI.WaitSet2_getWaitSet(swigCPtr, this);
    return (cPtr == 0) ? null : new WaitSet(cPtr, false);
  }

  public int wait(ConditionSeq2 active_conditions, Duration_t timeout) {
    return cpsjavamoduleJNI.WaitSet2_wait(swigCPtr, this, ConditionSeq2.getCPtr(active_conditions), active_conditions, Duration_t.getCPtr(timeout), timeout);
  }

  public int attach_condition(Condition2 cond) {
    return cpsjavamoduleJNI.WaitSet2_attach_condition(swigCPtr, this, Condition2.getCPtr(cond), cond);
  }

  public int detach_condition(Condition2 cond) {
    return cpsjavamoduleJNI.WaitSet2_detach_condition(swigCPtr, this, Condition2.getCPtr(cond), cond);
  }

  public int get_conditions(ConditionSeq attached_conditions) {
    return cpsjavamoduleJNI.WaitSet2_get_conditions(swigCPtr, this, ConditionSeq.getCPtr(attached_conditions), attached_conditions);
  }

}
