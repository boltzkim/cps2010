/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package kr.re.etri.cps.jni;

public class cpsjavamoduleJNI {
	static {
		Object os = System.getProperties().get("sun.arch.data.model");

		String medel = os.toString();

		if (medel.equals("64")) {
			try {
				System.out.println("Load Library : cps_java_x64.dll");
				System.loadLibrary("cps_java_x64");
			} catch (UnsatisfiedLinkError e) {
				System.err.println("Native code library failed to load.\n" + e);
			}
		} else {
			try {
				System.out.println("Load Library : cps_java.dll");
				System.loadLibrary("cps_java");
			} catch (UnsatisfiedLinkError e) {
				System.err.println("Native code library failed to load.\n" + e);
			}
		}
	}
	
  public final static native int SWIG_ON_get();
  public final static native int RETURN_CODE_T_DEFINE_get();
  public final static native void Time_t_sec_set(long jarg1, Time_t jarg1_, int jarg2);
  public final static native int Time_t_sec_get(long jarg1, Time_t jarg1_);
  public final static native void Time_t_nanosec_set(long jarg1, Time_t jarg1_, long jarg2);
  public final static native long Time_t_nanosec_get(long jarg1, Time_t jarg1_);
  public final static native long new_Time_t();
  public final static native void delete_Time_t(long jarg1);
  public final static native void Duration_t_sec_set(long jarg1, Duration_t jarg1_, int jarg2);
  public final static native int Duration_t_sec_get(long jarg1, Duration_t jarg1_);
  public final static native void Duration_t_nanosec_set(long jarg1, Duration_t jarg1_, long jarg2);
  public final static native long Duration_t_nanosec_get(long jarg1, Duration_t jarg1_);
  public final static native long new_Duration_t();
  public final static native void delete_Duration_t(long jarg1);
  public final static native int HANDLE_TYPE_NATIVE_DEFINE_get();
  public final static native void Entity_i_entity_type_set(long jarg1, Entity jarg1_, int jarg2);
  public final static native int Entity_i_entity_type_get(long jarg1, Entity jarg1_);
  public final static native long new_Entity();
  public final static native void delete_Entity(long jarg1);
  public final static native void DataWriter_i_entity_type_set(long jarg1, DataWriter jarg1_, int jarg2);
  public final static native int DataWriter_i_entity_type_get(long jarg1, DataWriter jarg1_);
  public final static native long new_DataWriter();
  public final static native void delete_DataWriter(long jarg1);
  public final static native void DataReader_i_entity_type_set(long jarg1, DataReader jarg1_, int jarg2);
  public final static native int DataReader_i_entity_type_get(long jarg1, DataReader jarg1_);
  public final static native long new_DataReader();
  public final static native void delete_DataReader(long jarg1);
  public final static native void Publisher_i_entity_type_set(long jarg1, Publisher jarg1_, int jarg2);
  public final static native int Publisher_i_entity_type_get(long jarg1, Publisher jarg1_);
  public final static native long new_Publisher();
  public final static native void delete_Publisher(long jarg1);
  public final static native void Subscriber_i_entity_type_set(long jarg1, Subscriber jarg1_, int jarg2);
  public final static native int Subscriber_i_entity_type_get(long jarg1, Subscriber jarg1_);
  public final static native long new_Subscriber();
  public final static native void delete_Subscriber(long jarg1);
  public final static native void DomainParticipant_i_entity_type_set(long jarg1, DomainParticipant jarg1_, int jarg2);
  public final static native int DomainParticipant_i_entity_type_get(long jarg1, DomainParticipant jarg1_);
  public final static native long new_DomainParticipant();
  public final static native void delete_DomainParticipant(long jarg1);
  public final static native void Topic_i_entity_type_set(long jarg1, Topic jarg1_, int jarg2);
  public final static native int Topic_i_entity_type_get(long jarg1, Topic jarg1_);
  public final static native long new_Topic();
  public final static native void delete_Topic(long jarg1);
  public final static native void MultiTopic_i_entity_type_set(long jarg1, MultiTopic jarg1_, int jarg2);
  public final static native int MultiTopic_i_entity_type_get(long jarg1, MultiTopic jarg1_);
  public final static native long new_MultiTopic();
  public final static native void delete_MultiTopic(long jarg1);
  public final static native void FooDataReader_i_entity_type_set(long jarg1, FooDataReader jarg1_, int jarg2);
  public final static native int FooDataReader_i_entity_type_get(long jarg1, FooDataReader jarg1_);
  public final static native long new_FooDataReader();
  public final static native void delete_FooDataReader(long jarg1);
  public final static native void FooDataWriter_i_entity_type_set(long jarg1, FooDataWriter jarg1_, int jarg2);
  public final static native int FooDataWriter_i_entity_type_get(long jarg1, FooDataWriter jarg1_);
  public final static native long new_FooDataWriter();
  public final static native void delete_FooDataWriter(long jarg1);
  public final static native void WaitSet_i_conditions_set(long jarg1, WaitSet jarg1_, int jarg2);
  public final static native int WaitSet_i_conditions_get(long jarg1, WaitSet jarg1_);
  public final static native long new_WaitSet();
  public final static native void delete_WaitSet(long jarg1);
  public final static native void ContentFilteredTopic_i_entity_type_set(long jarg1, ContentFilteredTopic jarg1_, int jarg2);
  public final static native int ContentFilteredTopic_i_entity_type_get(long jarg1, ContentFilteredTopic jarg1_);
  public final static native long new_ContentFilteredTopic();
  public final static native void delete_ContentFilteredTopic(long jarg1);
  public final static native void StringSeq_i_string_set(long jarg1, StringSeq jarg1_, int jarg2);
  public final static native int StringSeq_i_string_get(long jarg1, StringSeq jarg1_);
  public final static native void StringSeq_pp_string_set(long jarg1, StringSeq jarg1_, long jarg2);
  public final static native long StringSeq_pp_string_get(long jarg1, StringSeq jarg1_);
  public final static native long new_StringSeq();
  public final static native void delete_StringSeq(long jarg1);
  public final static native void BuiltinTopicKey_t_value_set(long jarg1, BuiltinTopicKey_t jarg1_, int[] jarg2);
  public final static native int[] BuiltinTopicKey_t_value_get(long jarg1, BuiltinTopicKey_t jarg1_);
  public final static native long new_BuiltinTopicKey_t();
  public final static native void delete_BuiltinTopicKey_t(long jarg1);
  public final static native int INVALID_QOS_POLICY_ID_get();
  public final static native int USERDATA_QOS_POLICY_ID_get();
  public final static native int DURABILITY_QOS_POLICY_ID_get();
  public final static native int PRESENTATION_QOS_POLICY_ID_get();
  public final static native int DEADLINE_QOS_POLICY_ID_get();
  public final static native int LATENCYBUDGET_QOS_POLICY_ID_get();
  public final static native int OWNERSHIP_QOS_POLICY_ID_get();
  public final static native int OWNERSHIPSTRENGTH_QOS_POLICY_ID_get();
  public final static native int LIVELINESS_QOS_POLICY_ID_get();
  public final static native int TIMEBASEDFILTER_QOS_POLICY_ID_get();
  public final static native int PARTITION_QOS_POLICY_ID_get();
  public final static native int RELIABILITY_QOS_POLICY_ID_get();
  public final static native int DESTINATIONORDER_QOS_POLICY_ID_get();
  public final static native int HISTORY_QOS_POLICY_ID_get();
  public final static native int RESOURCELIMITS_QOS_POLICY_ID_get();
  public final static native int ENTITYFACTORY_QOS_POLICY_ID_get();
  public final static native int WRITERDATALIFECYCLE_QOS_POLICY_ID_get();
  public final static native int READERDATALIFECYCLE_QOS_POLICY_ID_get();
  public final static native int TOPICDATA_QOS_POLICY_ID_get();
  public final static native int GROUPDATA_QOS_POLICY_ID_get();
  public final static native int TRANSPORTPRIORITY_QOS_POLICY_ID_get();
  public final static native int LIFESPAN_QOS_POLICY_ID_get();
  public final static native int DURABILITYSERVICE_QOS_POLICY_ID_get();
  public final static native void UserDataQosPolicy_value_set(long jarg1, UserDataQosPolicy jarg1_, long jarg2, StringSeq jarg2_);
  public final static native long UserDataQosPolicy_value_get(long jarg1, UserDataQosPolicy jarg1_);
  public final static native long new_UserDataQosPolicy();
  public final static native void delete_UserDataQosPolicy(long jarg1);
  public final static native void TopicDataQosPolicy_value_set(long jarg1, TopicDataQosPolicy jarg1_, long jarg2, StringSeq jarg2_);
  public final static native long TopicDataQosPolicy_value_get(long jarg1, TopicDataQosPolicy jarg1_);
  public final static native long new_TopicDataQosPolicy();
  public final static native void delete_TopicDataQosPolicy(long jarg1);
  public final static native void GroupDataQosPolicy_value_set(long jarg1, GroupDataQosPolicy jarg1_, long jarg2, StringSeq jarg2_);
  public final static native long GroupDataQosPolicy_value_get(long jarg1, GroupDataQosPolicy jarg1_);
  public final static native long new_GroupDataQosPolicy();
  public final static native void delete_GroupDataQosPolicy(long jarg1);
  public final static native void TransportPriorityQosPolicy_value_set(long jarg1, TransportPriorityQosPolicy jarg1_, int jarg2);
  public final static native int TransportPriorityQosPolicy_value_get(long jarg1, TransportPriorityQosPolicy jarg1_);
  public final static native long new_TransportPriorityQosPolicy();
  public final static native void delete_TransportPriorityQosPolicy(long jarg1);
  public final static native void LifespanQosPolicy_duration_set(long jarg1, LifespanQosPolicy jarg1_, long jarg2, Duration_t jarg2_);
  public final static native long LifespanQosPolicy_duration_get(long jarg1, LifespanQosPolicy jarg1_);
  public final static native long new_LifespanQosPolicy();
  public final static native void delete_LifespanQosPolicy(long jarg1);
  public final static native void DurabilityQosPolicy_kind_set(long jarg1, DurabilityQosPolicy jarg1_, int jarg2);
  public final static native int DurabilityQosPolicy_kind_get(long jarg1, DurabilityQosPolicy jarg1_);
  public final static native long new_DurabilityQosPolicy();
  public final static native void delete_DurabilityQosPolicy(long jarg1);
  public final static native void PresentationQosPolicy_access_scope_set(long jarg1, PresentationQosPolicy jarg1_, int jarg2);
  public final static native int PresentationQosPolicy_access_scope_get(long jarg1, PresentationQosPolicy jarg1_);
  public final static native void PresentationQosPolicy_coherent_access_set(long jarg1, PresentationQosPolicy jarg1_, boolean jarg2);
  public final static native boolean PresentationQosPolicy_coherent_access_get(long jarg1, PresentationQosPolicy jarg1_);
  public final static native void PresentationQosPolicy_ordered_access_set(long jarg1, PresentationQosPolicy jarg1_, boolean jarg2);
  public final static native boolean PresentationQosPolicy_ordered_access_get(long jarg1, PresentationQosPolicy jarg1_);
  public final static native long new_PresentationQosPolicy();
  public final static native void delete_PresentationQosPolicy(long jarg1);
  public final static native void DeadlineQosPolicy_period_set(long jarg1, DeadlineQosPolicy jarg1_, long jarg2, Duration_t jarg2_);
  public final static native long DeadlineQosPolicy_period_get(long jarg1, DeadlineQosPolicy jarg1_);
  public final static native long new_DeadlineQosPolicy();
  public final static native void delete_DeadlineQosPolicy(long jarg1);
  public final static native void LatencyBudgetQosPolicy_duration_set(long jarg1, LatencyBudgetQosPolicy jarg1_, long jarg2, Duration_t jarg2_);
  public final static native long LatencyBudgetQosPolicy_duration_get(long jarg1, LatencyBudgetQosPolicy jarg1_);
  public final static native long new_LatencyBudgetQosPolicy();
  public final static native void delete_LatencyBudgetQosPolicy(long jarg1);
  public final static native void OwnershipQosPolicy_kind_set(long jarg1, OwnershipQosPolicy jarg1_, int jarg2);
  public final static native int OwnershipQosPolicy_kind_get(long jarg1, OwnershipQosPolicy jarg1_);
  public final static native long new_OwnershipQosPolicy();
  public final static native void delete_OwnershipQosPolicy(long jarg1);
  public final static native void OwnershipStrengthQosPolicy_value_set(long jarg1, OwnershipStrengthQosPolicy jarg1_, int jarg2);
  public final static native int OwnershipStrengthQosPolicy_value_get(long jarg1, OwnershipStrengthQosPolicy jarg1_);
  public final static native long new_OwnershipStrengthQosPolicy();
  public final static native void delete_OwnershipStrengthQosPolicy(long jarg1);
  public final static native void LivelinessQosPolicy_kind_set(long jarg1, LivelinessQosPolicy jarg1_, int jarg2);
  public final static native int LivelinessQosPolicy_kind_get(long jarg1, LivelinessQosPolicy jarg1_);
  public final static native void LivelinessQosPolicy_lease_duration_set(long jarg1, LivelinessQosPolicy jarg1_, long jarg2, Duration_t jarg2_);
  public final static native long LivelinessQosPolicy_lease_duration_get(long jarg1, LivelinessQosPolicy jarg1_);
  public final static native long new_LivelinessQosPolicy();
  public final static native void delete_LivelinessQosPolicy(long jarg1);
  public final static native void TimeBasedFilterQosPolicy_minimum_separation_set(long jarg1, TimeBasedFilterQosPolicy jarg1_, long jarg2, Duration_t jarg2_);
  public final static native long TimeBasedFilterQosPolicy_minimum_separation_get(long jarg1, TimeBasedFilterQosPolicy jarg1_);
  public final static native long new_TimeBasedFilterQosPolicy();
  public final static native void delete_TimeBasedFilterQosPolicy(long jarg1);
  public final static native void PartitionQosPolicy_name_set(long jarg1, PartitionQosPolicy jarg1_, long jarg2, StringSeq jarg2_);
  public final static native long PartitionQosPolicy_name_get(long jarg1, PartitionQosPolicy jarg1_);
  public final static native long new_PartitionQosPolicy();
  public final static native void delete_PartitionQosPolicy(long jarg1);
  public final static native int BEST_EFFORT_RELIABILITY_QOS_get();
  public final static native void ReliabilityQosPolicy_kind_set(long jarg1, ReliabilityQosPolicy jarg1_, int jarg2);
  public final static native int ReliabilityQosPolicy_kind_get(long jarg1, ReliabilityQosPolicy jarg1_);
  public final static native void ReliabilityQosPolicy_max_blocking_time_set(long jarg1, ReliabilityQosPolicy jarg1_, long jarg2, Duration_t jarg2_);
  public final static native long ReliabilityQosPolicy_max_blocking_time_get(long jarg1, ReliabilityQosPolicy jarg1_);
  public final static native long new_ReliabilityQosPolicy();
  public final static native void delete_ReliabilityQosPolicy(long jarg1);
  public final static native void DestinationOrderQosPolicy_kind_set(long jarg1, DestinationOrderQosPolicy jarg1_, int jarg2);
  public final static native int DestinationOrderQosPolicy_kind_get(long jarg1, DestinationOrderQosPolicy jarg1_);
  public final static native long new_DestinationOrderQosPolicy();
  public final static native void delete_DestinationOrderQosPolicy(long jarg1);
  public final static native void HistoryQosPolicy_kind_set(long jarg1, HistoryQosPolicy jarg1_, int jarg2);
  public final static native int HistoryQosPolicy_kind_get(long jarg1, HistoryQosPolicy jarg1_);
  public final static native void HistoryQosPolicy_depth_set(long jarg1, HistoryQosPolicy jarg1_, int jarg2);
  public final static native int HistoryQosPolicy_depth_get(long jarg1, HistoryQosPolicy jarg1_);
  public final static native long new_HistoryQosPolicy();
  public final static native void delete_HistoryQosPolicy(long jarg1);
  public final static native void ResourceLimitsQosPolicy_max_samples_set(long jarg1, ResourceLimitsQosPolicy jarg1_, int jarg2);
  public final static native int ResourceLimitsQosPolicy_max_samples_get(long jarg1, ResourceLimitsQosPolicy jarg1_);
  public final static native void ResourceLimitsQosPolicy_max_instances_set(long jarg1, ResourceLimitsQosPolicy jarg1_, int jarg2);
  public final static native int ResourceLimitsQosPolicy_max_instances_get(long jarg1, ResourceLimitsQosPolicy jarg1_);
  public final static native void ResourceLimitsQosPolicy_max_samples_per_instance_set(long jarg1, ResourceLimitsQosPolicy jarg1_, int jarg2);
  public final static native int ResourceLimitsQosPolicy_max_samples_per_instance_get(long jarg1, ResourceLimitsQosPolicy jarg1_);
  public final static native long new_ResourceLimitsQosPolicy();
  public final static native void delete_ResourceLimitsQosPolicy(long jarg1);
  public final static native void EntityFactoryQosPolicy_autoenable_created_entities_set(long jarg1, EntityFactoryQosPolicy jarg1_, boolean jarg2);
  public final static native boolean EntityFactoryQosPolicy_autoenable_created_entities_get(long jarg1, EntityFactoryQosPolicy jarg1_);
  public final static native long new_EntityFactoryQosPolicy();
  public final static native void delete_EntityFactoryQosPolicy(long jarg1);
  public final static native void WriterDataLifecycleQosPolicy_autodispose_unregistered_instances_set(long jarg1, WriterDataLifecycleQosPolicy jarg1_, boolean jarg2);
  public final static native boolean WriterDataLifecycleQosPolicy_autodispose_unregistered_instances_get(long jarg1, WriterDataLifecycleQosPolicy jarg1_);
  public final static native long new_WriterDataLifecycleQosPolicy();
  public final static native void delete_WriterDataLifecycleQosPolicy(long jarg1);
  public final static native void ReaderDataLifecycleQosPolicy_autopurge_nowriter_samples_delay_set(long jarg1, ReaderDataLifecycleQosPolicy jarg1_, long jarg2, Duration_t jarg2_);
  public final static native long ReaderDataLifecycleQosPolicy_autopurge_nowriter_samples_delay_get(long jarg1, ReaderDataLifecycleQosPolicy jarg1_);
  public final static native void ReaderDataLifecycleQosPolicy_autopurge_disposed_samples_delay_set(long jarg1, ReaderDataLifecycleQosPolicy jarg1_, long jarg2, Duration_t jarg2_);
  public final static native long ReaderDataLifecycleQosPolicy_autopurge_disposed_samples_delay_get(long jarg1, ReaderDataLifecycleQosPolicy jarg1_);
  public final static native long new_ReaderDataLifecycleQosPolicy();
  public final static native void delete_ReaderDataLifecycleQosPolicy(long jarg1);
  public final static native void DurabilityServiceQosPolicy_service_cleanup_delay_set(long jarg1, DurabilityServiceQosPolicy jarg1_, long jarg2, Duration_t jarg2_);
  public final static native long DurabilityServiceQosPolicy_service_cleanup_delay_get(long jarg1, DurabilityServiceQosPolicy jarg1_);
  public final static native void DurabilityServiceQosPolicy_history_kind_set(long jarg1, DurabilityServiceQosPolicy jarg1_, int jarg2);
  public final static native int DurabilityServiceQosPolicy_history_kind_get(long jarg1, DurabilityServiceQosPolicy jarg1_);
  public final static native void DurabilityServiceQosPolicy_history_depth_set(long jarg1, DurabilityServiceQosPolicy jarg1_, int jarg2);
  public final static native int DurabilityServiceQosPolicy_history_depth_get(long jarg1, DurabilityServiceQosPolicy jarg1_);
  public final static native void DurabilityServiceQosPolicy_max_samples_set(long jarg1, DurabilityServiceQosPolicy jarg1_, int jarg2);
  public final static native int DurabilityServiceQosPolicy_max_samples_get(long jarg1, DurabilityServiceQosPolicy jarg1_);
  public final static native void DurabilityServiceQosPolicy_max_instances_set(long jarg1, DurabilityServiceQosPolicy jarg1_, int jarg2);
  public final static native int DurabilityServiceQosPolicy_max_instances_get(long jarg1, DurabilityServiceQosPolicy jarg1_);
  public final static native void DurabilityServiceQosPolicy_max_samples_per_instance_set(long jarg1, DurabilityServiceQosPolicy jarg1_, int jarg2);
  public final static native int DurabilityServiceQosPolicy_max_samples_per_instance_get(long jarg1, DurabilityServiceQosPolicy jarg1_);
  public final static native long new_DurabilityServiceQosPolicy();
  public final static native void delete_DurabilityServiceQosPolicy(long jarg1);
  public final static native void DomainParticipantFactoryQos_entity_factory_set(long jarg1, DomainParticipantFactoryQos jarg1_, long jarg2, EntityFactoryQosPolicy jarg2_);
  public final static native long DomainParticipantFactoryQos_entity_factory_get(long jarg1, DomainParticipantFactoryQos jarg1_);
  public final static native long new_DomainParticipantFactoryQos();
  public final static native void delete_DomainParticipantFactoryQos(long jarg1);
  public final static native void DomainParticipantQos_user_data_set(long jarg1, DomainParticipantQos jarg1_, long jarg2, UserDataQosPolicy jarg2_);
  public final static native long DomainParticipantQos_user_data_get(long jarg1, DomainParticipantQos jarg1_);
  public final static native void DomainParticipantQos_entity_factory_set(long jarg1, DomainParticipantQos jarg1_, long jarg2, EntityFactoryQosPolicy jarg2_);
  public final static native long DomainParticipantQos_entity_factory_get(long jarg1, DomainParticipantQos jarg1_);
  public final static native long new_DomainParticipantQos();
  public final static native void delete_DomainParticipantQos(long jarg1);
  public final static native void TopicQos_topic_data_set(long jarg1, TopicQos jarg1_, long jarg2, TopicDataQosPolicy jarg2_);
  public final static native long TopicQos_topic_data_get(long jarg1, TopicQos jarg1_);
  public final static native void TopicQos_durability_set(long jarg1, TopicQos jarg1_, long jarg2, DurabilityQosPolicy jarg2_);
  public final static native long TopicQos_durability_get(long jarg1, TopicQos jarg1_);
  public final static native void TopicQos_durability_service_set(long jarg1, TopicQos jarg1_, long jarg2, DurabilityServiceQosPolicy jarg2_);
  public final static native long TopicQos_durability_service_get(long jarg1, TopicQos jarg1_);
  public final static native void TopicQos_deadline_set(long jarg1, TopicQos jarg1_, long jarg2, DeadlineQosPolicy jarg2_);
  public final static native long TopicQos_deadline_get(long jarg1, TopicQos jarg1_);
  public final static native void TopicQos_latency_budget_set(long jarg1, TopicQos jarg1_, long jarg2, LatencyBudgetQosPolicy jarg2_);
  public final static native long TopicQos_latency_budget_get(long jarg1, TopicQos jarg1_);
  public final static native void TopicQos_liveliness_set(long jarg1, TopicQos jarg1_, long jarg2, LivelinessQosPolicy jarg2_);
  public final static native long TopicQos_liveliness_get(long jarg1, TopicQos jarg1_);
  public final static native void TopicQos_reliability_set(long jarg1, TopicQos jarg1_, long jarg2, ReliabilityQosPolicy jarg2_);
  public final static native long TopicQos_reliability_get(long jarg1, TopicQos jarg1_);
  public final static native void TopicQos_destination_order_set(long jarg1, TopicQos jarg1_, long jarg2, DestinationOrderQosPolicy jarg2_);
  public final static native long TopicQos_destination_order_get(long jarg1, TopicQos jarg1_);
  public final static native void TopicQos_history_set(long jarg1, TopicQos jarg1_, long jarg2, HistoryQosPolicy jarg2_);
  public final static native long TopicQos_history_get(long jarg1, TopicQos jarg1_);
  public final static native void TopicQos_resource_limits_set(long jarg1, TopicQos jarg1_, long jarg2, ResourceLimitsQosPolicy jarg2_);
  public final static native long TopicQos_resource_limits_get(long jarg1, TopicQos jarg1_);
  public final static native void TopicQos_transport_priority_set(long jarg1, TopicQos jarg1_, long jarg2, TransportPriorityQosPolicy jarg2_);
  public final static native long TopicQos_transport_priority_get(long jarg1, TopicQos jarg1_);
  public final static native void TopicQos_lifespan_set(long jarg1, TopicQos jarg1_, long jarg2, LifespanQosPolicy jarg2_);
  public final static native long TopicQos_lifespan_get(long jarg1, TopicQos jarg1_);
  public final static native void TopicQos_ownership_set(long jarg1, TopicQos jarg1_, long jarg2, OwnershipQosPolicy jarg2_);
  public final static native long TopicQos_ownership_get(long jarg1, TopicQos jarg1_);
  public final static native long new_TopicQos();
  public final static native void delete_TopicQos(long jarg1);
  public final static native void DataWriterQos_durability_set(long jarg1, DataWriterQos jarg1_, long jarg2, DurabilityQosPolicy jarg2_);
  public final static native long DataWriterQos_durability_get(long jarg1, DataWriterQos jarg1_);
  public final static native void DataWriterQos_durability_service_set(long jarg1, DataWriterQos jarg1_, long jarg2, DurabilityServiceQosPolicy jarg2_);
  public final static native long DataWriterQos_durability_service_get(long jarg1, DataWriterQos jarg1_);
  public final static native void DataWriterQos_deadline_set(long jarg1, DataWriterQos jarg1_, long jarg2, DeadlineQosPolicy jarg2_);
  public final static native long DataWriterQos_deadline_get(long jarg1, DataWriterQos jarg1_);
  public final static native void DataWriterQos_latency_budget_set(long jarg1, DataWriterQos jarg1_, long jarg2, LatencyBudgetQosPolicy jarg2_);
  public final static native long DataWriterQos_latency_budget_get(long jarg1, DataWriterQos jarg1_);
  public final static native void DataWriterQos_liveliness_set(long jarg1, DataWriterQos jarg1_, long jarg2, LivelinessQosPolicy jarg2_);
  public final static native long DataWriterQos_liveliness_get(long jarg1, DataWriterQos jarg1_);
  public final static native void DataWriterQos_reliability_set(long jarg1, DataWriterQos jarg1_, long jarg2, ReliabilityQosPolicy jarg2_);
  public final static native long DataWriterQos_reliability_get(long jarg1, DataWriterQos jarg1_);
  public final static native void DataWriterQos_destination_order_set(long jarg1, DataWriterQos jarg1_, long jarg2, DestinationOrderQosPolicy jarg2_);
  public final static native long DataWriterQos_destination_order_get(long jarg1, DataWriterQos jarg1_);
  public final static native void DataWriterQos_history_set(long jarg1, DataWriterQos jarg1_, long jarg2, HistoryQosPolicy jarg2_);
  public final static native long DataWriterQos_history_get(long jarg1, DataWriterQos jarg1_);
  public final static native void DataWriterQos_resource_limits_set(long jarg1, DataWriterQos jarg1_, long jarg2, ResourceLimitsQosPolicy jarg2_);
  public final static native long DataWriterQos_resource_limits_get(long jarg1, DataWriterQos jarg1_);
  public final static native void DataWriterQos_transport_priority_set(long jarg1, DataWriterQos jarg1_, long jarg2, TransportPriorityQosPolicy jarg2_);
  public final static native long DataWriterQos_transport_priority_get(long jarg1, DataWriterQos jarg1_);
  public final static native void DataWriterQos_lifespan_set(long jarg1, DataWriterQos jarg1_, long jarg2, LifespanQosPolicy jarg2_);
  public final static native long DataWriterQos_lifespan_get(long jarg1, DataWriterQos jarg1_);
  public final static native void DataWriterQos_user_data_set(long jarg1, DataWriterQos jarg1_, long jarg2, UserDataQosPolicy jarg2_);
  public final static native long DataWriterQos_user_data_get(long jarg1, DataWriterQos jarg1_);
  public final static native void DataWriterQos_ownership_set(long jarg1, DataWriterQos jarg1_, long jarg2, OwnershipQosPolicy jarg2_);
  public final static native long DataWriterQos_ownership_get(long jarg1, DataWriterQos jarg1_);
  public final static native void DataWriterQos_ownership_strength_set(long jarg1, DataWriterQos jarg1_, long jarg2, OwnershipStrengthQosPolicy jarg2_);
  public final static native long DataWriterQos_ownership_strength_get(long jarg1, DataWriterQos jarg1_);
  public final static native void DataWriterQos_writer_data_lifecycle_set(long jarg1, DataWriterQos jarg1_, long jarg2, WriterDataLifecycleQosPolicy jarg2_);
  public final static native long DataWriterQos_writer_data_lifecycle_get(long jarg1, DataWriterQos jarg1_);
  public final static native long new_DataWriterQos();
  public final static native void delete_DataWriterQos(long jarg1);
  public final static native void PublisherQos_presentation_set(long jarg1, PublisherQos jarg1_, long jarg2, PresentationQosPolicy jarg2_);
  public final static native long PublisherQos_presentation_get(long jarg1, PublisherQos jarg1_);
  public final static native void PublisherQos_partition_set(long jarg1, PublisherQos jarg1_, long jarg2, PartitionQosPolicy jarg2_);
  public final static native long PublisherQos_partition_get(long jarg1, PublisherQos jarg1_);
  public final static native void PublisherQos_group_data_set(long jarg1, PublisherQos jarg1_, long jarg2, GroupDataQosPolicy jarg2_);
  public final static native long PublisherQos_group_data_get(long jarg1, PublisherQos jarg1_);
  public final static native void PublisherQos_entity_factory_set(long jarg1, PublisherQos jarg1_, long jarg2, EntityFactoryQosPolicy jarg2_);
  public final static native long PublisherQos_entity_factory_get(long jarg1, PublisherQos jarg1_);
  public final static native long new_PublisherQos();
  public final static native void delete_PublisherQos(long jarg1);
  public final static native void DataReaderQos_durability_set(long jarg1, DataReaderQos jarg1_, long jarg2, DurabilityQosPolicy jarg2_);
  public final static native long DataReaderQos_durability_get(long jarg1, DataReaderQos jarg1_);
  public final static native void DataReaderQos_deadline_set(long jarg1, DataReaderQos jarg1_, long jarg2, DeadlineQosPolicy jarg2_);
  public final static native long DataReaderQos_deadline_get(long jarg1, DataReaderQos jarg1_);
  public final static native void DataReaderQos_latency_budget_set(long jarg1, DataReaderQos jarg1_, long jarg2, LatencyBudgetQosPolicy jarg2_);
  public final static native long DataReaderQos_latency_budget_get(long jarg1, DataReaderQos jarg1_);
  public final static native void DataReaderQos_liveliness_set(long jarg1, DataReaderQos jarg1_, long jarg2, LivelinessQosPolicy jarg2_);
  public final static native long DataReaderQos_liveliness_get(long jarg1, DataReaderQos jarg1_);
  public final static native void DataReaderQos_reliability_set(long jarg1, DataReaderQos jarg1_, long jarg2, ReliabilityQosPolicy jarg2_);
  public final static native long DataReaderQos_reliability_get(long jarg1, DataReaderQos jarg1_);
  public final static native void DataReaderQos_destination_order_set(long jarg1, DataReaderQos jarg1_, long jarg2, DestinationOrderQosPolicy jarg2_);
  public final static native long DataReaderQos_destination_order_get(long jarg1, DataReaderQos jarg1_);
  public final static native void DataReaderQos_history_set(long jarg1, DataReaderQos jarg1_, long jarg2, HistoryQosPolicy jarg2_);
  public final static native long DataReaderQos_history_get(long jarg1, DataReaderQos jarg1_);
  public final static native void DataReaderQos_resource_limits_set(long jarg1, DataReaderQos jarg1_, long jarg2, ResourceLimitsQosPolicy jarg2_);
  public final static native long DataReaderQos_resource_limits_get(long jarg1, DataReaderQos jarg1_);
  public final static native void DataReaderQos_user_data_set(long jarg1, DataReaderQos jarg1_, long jarg2, UserDataQosPolicy jarg2_);
  public final static native long DataReaderQos_user_data_get(long jarg1, DataReaderQos jarg1_);
  public final static native void DataReaderQos_ownership_set(long jarg1, DataReaderQos jarg1_, long jarg2, OwnershipQosPolicy jarg2_);
  public final static native long DataReaderQos_ownership_get(long jarg1, DataReaderQos jarg1_);
  public final static native void DataReaderQos_time_based_filter_set(long jarg1, DataReaderQos jarg1_, long jarg2, TimeBasedFilterQosPolicy jarg2_);
  public final static native long DataReaderQos_time_based_filter_get(long jarg1, DataReaderQos jarg1_);
  public final static native void DataReaderQos_reader_data_lifecycle_set(long jarg1, DataReaderQos jarg1_, long jarg2, ReaderDataLifecycleQosPolicy jarg2_);
  public final static native long DataReaderQos_reader_data_lifecycle_get(long jarg1, DataReaderQos jarg1_);
  public final static native long new_DataReaderQos();
  public final static native void delete_DataReaderQos(long jarg1);
  public final static native void SubscriberQos_presentation_set(long jarg1, SubscriberQos jarg1_, long jarg2, PresentationQosPolicy jarg2_);
  public final static native long SubscriberQos_presentation_get(long jarg1, SubscriberQos jarg1_);
  public final static native void SubscriberQos_partition_set(long jarg1, SubscriberQos jarg1_, long jarg2, PartitionQosPolicy jarg2_);
  public final static native long SubscriberQos_partition_get(long jarg1, SubscriberQos jarg1_);
  public final static native void SubscriberQos_group_data_set(long jarg1, SubscriberQos jarg1_, long jarg2, GroupDataQosPolicy jarg2_);
  public final static native long SubscriberQos_group_data_get(long jarg1, SubscriberQos jarg1_);
  public final static native void SubscriberQos_entity_factory_set(long jarg1, SubscriberQos jarg1_, long jarg2, EntityFactoryQosPolicy jarg2_);
  public final static native long SubscriberQos_entity_factory_get(long jarg1, SubscriberQos jarg1_);
  public final static native long new_SubscriberQos();
  public final static native void delete_SubscriberQos(long jarg1);
  public final static native long INCONSISTENT_TOPIC_STATUS_get();
  public final static native long OFFERED_DEADLINE_MISSED_STATUS_get();
  public final static native long REQUESTED_DEADLINE_MISSED_STATUS_get();
  public final static native long OFFERED_INCOMPATIBLE_QOS_STATUS_get();
  public final static native long REQUESTED_INCOMPATIBLE_QOS_STATUS_get();
  public final static native long SAMPLE_LOST_STATUS_get();
  public final static native long SAMPLE_REJECTED_STATUS_get();
  public final static native long DATA_ON_READERS_STATUS_get();
  public final static native long DATA_AVAILABLE_STATUS_get();
  public final static native long LIVELINESS_LOST_STATUS_get();
  public final static native long LIVELINESS_CHANGED_STATUS_get();
  public final static native long PUBLICATION_MATCHED_STATUS_get();
  public final static native long SUBSCRIPTION_MATCHED_STATUS_get();
  public final static native long ALL_ENABLE_STATUS_get();
  public final static native void InconsistentTopicStatus_total_count_set(long jarg1, InconsistentTopicStatus jarg1_, int jarg2);
  public final static native int InconsistentTopicStatus_total_count_get(long jarg1, InconsistentTopicStatus jarg1_);
  public final static native void InconsistentTopicStatus_total_count_change_set(long jarg1, InconsistentTopicStatus jarg1_, int jarg2);
  public final static native int InconsistentTopicStatus_total_count_change_get(long jarg1, InconsistentTopicStatus jarg1_);
  public final static native long new_InconsistentTopicStatus();
  public final static native void delete_InconsistentTopicStatus(long jarg1);
  public final static native void SampleLostStatus_total_count_set(long jarg1, SampleLostStatus jarg1_, int jarg2);
  public final static native int SampleLostStatus_total_count_get(long jarg1, SampleLostStatus jarg1_);
  public final static native void SampleLostStatus_total_count_change_set(long jarg1, SampleLostStatus jarg1_, int jarg2);
  public final static native int SampleLostStatus_total_count_change_get(long jarg1, SampleLostStatus jarg1_);
  public final static native long new_SampleLostStatus();
  public final static native void delete_SampleLostStatus(long jarg1);
  public final static native void SampleRejectedStatus_total_count_set(long jarg1, SampleRejectedStatus jarg1_, int jarg2);
  public final static native int SampleRejectedStatus_total_count_get(long jarg1, SampleRejectedStatus jarg1_);
  public final static native void SampleRejectedStatus_total_count_change_set(long jarg1, SampleRejectedStatus jarg1_, int jarg2);
  public final static native int SampleRejectedStatus_total_count_change_get(long jarg1, SampleRejectedStatus jarg1_);
  public final static native void SampleRejectedStatus_last_reason_set(long jarg1, SampleRejectedStatus jarg1_, int jarg2);
  public final static native int SampleRejectedStatus_last_reason_get(long jarg1, SampleRejectedStatus jarg1_);
  public final static native void SampleRejectedStatus_last_instance_handle_set(long jarg1, SampleRejectedStatus jarg1_, int jarg2);
  public final static native int SampleRejectedStatus_last_instance_handle_get(long jarg1, SampleRejectedStatus jarg1_);
  public final static native long new_SampleRejectedStatus();
  public final static native void delete_SampleRejectedStatus(long jarg1);
  public final static native void LivelinessLostStatus_total_count_set(long jarg1, LivelinessLostStatus jarg1_, int jarg2);
  public final static native int LivelinessLostStatus_total_count_get(long jarg1, LivelinessLostStatus jarg1_);
  public final static native void LivelinessLostStatus_total_count_change_set(long jarg1, LivelinessLostStatus jarg1_, int jarg2);
  public final static native int LivelinessLostStatus_total_count_change_get(long jarg1, LivelinessLostStatus jarg1_);
  public final static native long new_LivelinessLostStatus();
  public final static native void delete_LivelinessLostStatus(long jarg1);
  public final static native void LivelinessChangedStatus_alive_count_set(long jarg1, LivelinessChangedStatus jarg1_, int jarg2);
  public final static native int LivelinessChangedStatus_alive_count_get(long jarg1, LivelinessChangedStatus jarg1_);
  public final static native void LivelinessChangedStatus_not_alive_count_set(long jarg1, LivelinessChangedStatus jarg1_, int jarg2);
  public final static native int LivelinessChangedStatus_not_alive_count_get(long jarg1, LivelinessChangedStatus jarg1_);
  public final static native void LivelinessChangedStatus_alive_count_change_set(long jarg1, LivelinessChangedStatus jarg1_, int jarg2);
  public final static native int LivelinessChangedStatus_alive_count_change_get(long jarg1, LivelinessChangedStatus jarg1_);
  public final static native void LivelinessChangedStatus_not_alive_count_change_set(long jarg1, LivelinessChangedStatus jarg1_, int jarg2);
  public final static native int LivelinessChangedStatus_not_alive_count_change_get(long jarg1, LivelinessChangedStatus jarg1_);
  public final static native void LivelinessChangedStatus_last_publication_handle_set(long jarg1, LivelinessChangedStatus jarg1_, int jarg2);
  public final static native int LivelinessChangedStatus_last_publication_handle_get(long jarg1, LivelinessChangedStatus jarg1_);
  public final static native long new_LivelinessChangedStatus();
  public final static native void delete_LivelinessChangedStatus(long jarg1);
  public final static native void OfferedDeadlineMissedStatus_total_count_set(long jarg1, OfferedDeadlineMissedStatus jarg1_, int jarg2);
  public final static native int OfferedDeadlineMissedStatus_total_count_get(long jarg1, OfferedDeadlineMissedStatus jarg1_);
  public final static native void OfferedDeadlineMissedStatus_total_count_change_set(long jarg1, OfferedDeadlineMissedStatus jarg1_, int jarg2);
  public final static native int OfferedDeadlineMissedStatus_total_count_change_get(long jarg1, OfferedDeadlineMissedStatus jarg1_);
  public final static native void OfferedDeadlineMissedStatus_last_instance_handle_set(long jarg1, OfferedDeadlineMissedStatus jarg1_, int jarg2);
  public final static native int OfferedDeadlineMissedStatus_last_instance_handle_get(long jarg1, OfferedDeadlineMissedStatus jarg1_);
  public final static native long new_OfferedDeadlineMissedStatus();
  public final static native void delete_OfferedDeadlineMissedStatus(long jarg1);
  public final static native void RequestedDeadlineMissedStatus_total_count_set(long jarg1, RequestedDeadlineMissedStatus jarg1_, int jarg2);
  public final static native int RequestedDeadlineMissedStatus_total_count_get(long jarg1, RequestedDeadlineMissedStatus jarg1_);
  public final static native void RequestedDeadlineMissedStatus_total_count_change_set(long jarg1, RequestedDeadlineMissedStatus jarg1_, int jarg2);
  public final static native int RequestedDeadlineMissedStatus_total_count_change_get(long jarg1, RequestedDeadlineMissedStatus jarg1_);
  public final static native void RequestedDeadlineMissedStatus_last_instance_handle_set(long jarg1, RequestedDeadlineMissedStatus jarg1_, int jarg2);
  public final static native int RequestedDeadlineMissedStatus_last_instance_handle_get(long jarg1, RequestedDeadlineMissedStatus jarg1_);
  public final static native long new_RequestedDeadlineMissedStatus();
  public final static native void delete_RequestedDeadlineMissedStatus(long jarg1);
  public final static native void QosPolicyCount_policy_id_set(long jarg1, QosPolicyCount jarg1_, int jarg2);
  public final static native int QosPolicyCount_policy_id_get(long jarg1, QosPolicyCount jarg1_);
  public final static native void QosPolicyCount_count_set(long jarg1, QosPolicyCount jarg1_, int jarg2);
  public final static native int QosPolicyCount_count_get(long jarg1, QosPolicyCount jarg1_);
  public final static native long new_QosPolicyCount();
  public final static native void delete_QosPolicyCount(long jarg1);
  public final static native void OfferedIncompatibleQosStatus_total_count_set(long jarg1, OfferedIncompatibleQosStatus jarg1_, int jarg2);
  public final static native int OfferedIncompatibleQosStatus_total_count_get(long jarg1, OfferedIncompatibleQosStatus jarg1_);
  public final static native void OfferedIncompatibleQosStatus_total_count_change_set(long jarg1, OfferedIncompatibleQosStatus jarg1_, int jarg2);
  public final static native int OfferedIncompatibleQosStatus_total_count_change_get(long jarg1, OfferedIncompatibleQosStatus jarg1_);
  public final static native void OfferedIncompatibleQosStatus_last_policy_id_set(long jarg1, OfferedIncompatibleQosStatus jarg1_, int jarg2);
  public final static native int OfferedIncompatibleQosStatus_last_policy_id_get(long jarg1, OfferedIncompatibleQosStatus jarg1_);
  public final static native void OfferedIncompatibleQosStatus_policies_set(long jarg1, OfferedIncompatibleQosStatus jarg1_, long jarg2, QosPolicyCount jarg2_);
  public final static native long OfferedIncompatibleQosStatus_policies_get(long jarg1, OfferedIncompatibleQosStatus jarg1_);
  public final static native long new_OfferedIncompatibleQosStatus();
  public final static native void delete_OfferedIncompatibleQosStatus(long jarg1);
  public final static native void RequestedIncompatibleQosStatus_total_count_set(long jarg1, RequestedIncompatibleQosStatus jarg1_, int jarg2);
  public final static native int RequestedIncompatibleQosStatus_total_count_get(long jarg1, RequestedIncompatibleQosStatus jarg1_);
  public final static native void RequestedIncompatibleQosStatus_total_count_change_set(long jarg1, RequestedIncompatibleQosStatus jarg1_, int jarg2);
  public final static native int RequestedIncompatibleQosStatus_total_count_change_get(long jarg1, RequestedIncompatibleQosStatus jarg1_);
  public final static native void RequestedIncompatibleQosStatus_last_policy_id_set(long jarg1, RequestedIncompatibleQosStatus jarg1_, int jarg2);
  public final static native int RequestedIncompatibleQosStatus_last_policy_id_get(long jarg1, RequestedIncompatibleQosStatus jarg1_);
  public final static native void RequestedIncompatibleQosStatus_policies_set(long jarg1, RequestedIncompatibleQosStatus jarg1_, long jarg2, QosPolicyCount jarg2_);
  public final static native long RequestedIncompatibleQosStatus_policies_get(long jarg1, RequestedIncompatibleQosStatus jarg1_);
  public final static native long new_RequestedIncompatibleQosStatus();
  public final static native void delete_RequestedIncompatibleQosStatus(long jarg1);
  public final static native void PublicationMatchedStatus_total_count_set(long jarg1, PublicationMatchedStatus jarg1_, int jarg2);
  public final static native int PublicationMatchedStatus_total_count_get(long jarg1, PublicationMatchedStatus jarg1_);
  public final static native void PublicationMatchedStatus_total_count_change_set(long jarg1, PublicationMatchedStatus jarg1_, int jarg2);
  public final static native int PublicationMatchedStatus_total_count_change_get(long jarg1, PublicationMatchedStatus jarg1_);
  public final static native void PublicationMatchedStatus_current_count_set(long jarg1, PublicationMatchedStatus jarg1_, int jarg2);
  public final static native int PublicationMatchedStatus_current_count_get(long jarg1, PublicationMatchedStatus jarg1_);
  public final static native void PublicationMatchedStatus_current_count_change_set(long jarg1, PublicationMatchedStatus jarg1_, int jarg2);
  public final static native int PublicationMatchedStatus_current_count_change_get(long jarg1, PublicationMatchedStatus jarg1_);
  public final static native void PublicationMatchedStatus_last_subscription_handle_set(long jarg1, PublicationMatchedStatus jarg1_, int jarg2);
  public final static native int PublicationMatchedStatus_last_subscription_handle_get(long jarg1, PublicationMatchedStatus jarg1_);
  public final static native long new_PublicationMatchedStatus();
  public final static native void delete_PublicationMatchedStatus(long jarg1);
  public final static native void SubscriptionMatchedStatus_total_count_set(long jarg1, SubscriptionMatchedStatus jarg1_, int jarg2);
  public final static native int SubscriptionMatchedStatus_total_count_get(long jarg1, SubscriptionMatchedStatus jarg1_);
  public final static native void SubscriptionMatchedStatus_total_count_change_set(long jarg1, SubscriptionMatchedStatus jarg1_, int jarg2);
  public final static native int SubscriptionMatchedStatus_total_count_change_get(long jarg1, SubscriptionMatchedStatus jarg1_);
  public final static native void SubscriptionMatchedStatus_current_count_set(long jarg1, SubscriptionMatchedStatus jarg1_, int jarg2);
  public final static native int SubscriptionMatchedStatus_current_count_get(long jarg1, SubscriptionMatchedStatus jarg1_);
  public final static native void SubscriptionMatchedStatus_current_count_change_set(long jarg1, SubscriptionMatchedStatus jarg1_, int jarg2);
  public final static native int SubscriptionMatchedStatus_current_count_change_get(long jarg1, SubscriptionMatchedStatus jarg1_);
  public final static native void SubscriptionMatchedStatus_last_publication_handle_set(long jarg1, SubscriptionMatchedStatus jarg1_, int jarg2);
  public final static native int SubscriptionMatchedStatus_last_publication_handle_get(long jarg1, SubscriptionMatchedStatus jarg1_);
  public final static native long new_SubscriptionMatchedStatus();
  public final static native void delete_SubscriptionMatchedStatus(long jarg1);
  public final static native void DataWriterStatus_offered_deadline_missed_set(long jarg1, DataWriterStatus jarg1_, long jarg2, OfferedDeadlineMissedStatus jarg2_);
  public final static native long DataWriterStatus_offered_deadline_missed_get(long jarg1, DataWriterStatus jarg1_);
  public final static native void DataWriterStatus_offered_incompatible_qos_set(long jarg1, DataWriterStatus jarg1_, long jarg2, OfferedIncompatibleQosStatus jarg2_);
  public final static native long DataWriterStatus_offered_incompatible_qos_get(long jarg1, DataWriterStatus jarg1_);
  public final static native void DataWriterStatus_liveliness_lost_set(long jarg1, DataWriterStatus jarg1_, long jarg2, LivelinessLostStatus jarg2_);
  public final static native long DataWriterStatus_liveliness_lost_get(long jarg1, DataWriterStatus jarg1_);
  public final static native void DataWriterStatus_publication_matched_set(long jarg1, DataWriterStatus jarg1_, long jarg2, PublicationMatchedStatus jarg2_);
  public final static native long DataWriterStatus_publication_matched_get(long jarg1, DataWriterStatus jarg1_);
  public final static native long new_DataWriterStatus();
  public final static native void delete_DataWriterStatus(long jarg1);
  public final static native void DataWriterListenerStatusChangedFlag_b_liveliness_lost_status_changed_flag_set(long jarg1, DataWriterListenerStatusChangedFlag jarg1_, boolean jarg2);
  public final static native boolean DataWriterListenerStatusChangedFlag_b_liveliness_lost_status_changed_flag_get(long jarg1, DataWriterListenerStatusChangedFlag jarg1_);
  public final static native void DataWriterListenerStatusChangedFlag_b_offered_deadline_missed_status_changed_flag_set(long jarg1, DataWriterListenerStatusChangedFlag jarg1_, boolean jarg2);
  public final static native boolean DataWriterListenerStatusChangedFlag_b_offered_deadline_missed_status_changed_flag_get(long jarg1, DataWriterListenerStatusChangedFlag jarg1_);
  public final static native void DataWriterListenerStatusChangedFlag_b_offered_incompatible_qos_status_changed_flag_set(long jarg1, DataWriterListenerStatusChangedFlag jarg1_, boolean jarg2);
  public final static native boolean DataWriterListenerStatusChangedFlag_b_offered_incompatible_qos_status_changed_flag_get(long jarg1, DataWriterListenerStatusChangedFlag jarg1_);
  public final static native void DataWriterListenerStatusChangedFlag_b_publication_matched_status_changed_flag_set(long jarg1, DataWriterListenerStatusChangedFlag jarg1_, boolean jarg2);
  public final static native boolean DataWriterListenerStatusChangedFlag_b_publication_matched_status_changed_flag_get(long jarg1, DataWriterListenerStatusChangedFlag jarg1_);
  public final static native long new_DataWriterListenerStatusChangedFlag();
  public final static native void delete_DataWriterListenerStatusChangedFlag(long jarg1);
  public final static native void ParticipantBuiltinTopicData_key_set(long jarg1, ParticipantBuiltinTopicData jarg1_, long jarg2, BuiltinTopicKey_t jarg2_);
  public final static native long ParticipantBuiltinTopicData_key_get(long jarg1, ParticipantBuiltinTopicData jarg1_);
  public final static native void ParticipantBuiltinTopicData_user_data_set(long jarg1, ParticipantBuiltinTopicData jarg1_, long jarg2, UserDataQosPolicy jarg2_);
  public final static native long ParticipantBuiltinTopicData_user_data_get(long jarg1, ParticipantBuiltinTopicData jarg1_);
  public final static native long new_ParticipantBuiltinTopicData();
  public final static native void delete_ParticipantBuiltinTopicData(long jarg1);
  public final static native void TopicBuiltinTopicData_key_set(long jarg1, TopicBuiltinTopicData jarg1_, long jarg2, BuiltinTopicKey_t jarg2_);
  public final static native long TopicBuiltinTopicData_key_get(long jarg1, TopicBuiltinTopicData jarg1_);
  public final static native void TopicBuiltinTopicData_name_set(long jarg1, TopicBuiltinTopicData jarg1_, String jarg2);
  public final static native String TopicBuiltinTopicData_name_get(long jarg1, TopicBuiltinTopicData jarg1_);
  public final static native void TopicBuiltinTopicData_type_name_set(long jarg1, TopicBuiltinTopicData jarg1_, String jarg2);
  public final static native String TopicBuiltinTopicData_type_name_get(long jarg1, TopicBuiltinTopicData jarg1_);
  public final static native void TopicBuiltinTopicData_durability_set(long jarg1, TopicBuiltinTopicData jarg1_, long jarg2, DurabilityQosPolicy jarg2_);
  public final static native long TopicBuiltinTopicData_durability_get(long jarg1, TopicBuiltinTopicData jarg1_);
  public final static native void TopicBuiltinTopicData_durability_service_set(long jarg1, TopicBuiltinTopicData jarg1_, long jarg2, DurabilityServiceQosPolicy jarg2_);
  public final static native long TopicBuiltinTopicData_durability_service_get(long jarg1, TopicBuiltinTopicData jarg1_);
  public final static native void TopicBuiltinTopicData_deadline_set(long jarg1, TopicBuiltinTopicData jarg1_, long jarg2, DeadlineQosPolicy jarg2_);
  public final static native long TopicBuiltinTopicData_deadline_get(long jarg1, TopicBuiltinTopicData jarg1_);
  public final static native void TopicBuiltinTopicData_latency_budget_set(long jarg1, TopicBuiltinTopicData jarg1_, long jarg2, LatencyBudgetQosPolicy jarg2_);
  public final static native long TopicBuiltinTopicData_latency_budget_get(long jarg1, TopicBuiltinTopicData jarg1_);
  public final static native void TopicBuiltinTopicData_liveliness_set(long jarg1, TopicBuiltinTopicData jarg1_, long jarg2, LivelinessQosPolicy jarg2_);
  public final static native long TopicBuiltinTopicData_liveliness_get(long jarg1, TopicBuiltinTopicData jarg1_);
  public final static native void TopicBuiltinTopicData_reliability_set(long jarg1, TopicBuiltinTopicData jarg1_, long jarg2, ReliabilityQosPolicy jarg2_);
  public final static native long TopicBuiltinTopicData_reliability_get(long jarg1, TopicBuiltinTopicData jarg1_);
  public final static native void TopicBuiltinTopicData_transport_priority_set(long jarg1, TopicBuiltinTopicData jarg1_, long jarg2, TransportPriorityQosPolicy jarg2_);
  public final static native long TopicBuiltinTopicData_transport_priority_get(long jarg1, TopicBuiltinTopicData jarg1_);
  public final static native void TopicBuiltinTopicData_lifespan_set(long jarg1, TopicBuiltinTopicData jarg1_, long jarg2, LifespanQosPolicy jarg2_);
  public final static native long TopicBuiltinTopicData_lifespan_get(long jarg1, TopicBuiltinTopicData jarg1_);
  public final static native void TopicBuiltinTopicData_destination_order_set(long jarg1, TopicBuiltinTopicData jarg1_, long jarg2, DestinationOrderQosPolicy jarg2_);
  public final static native long TopicBuiltinTopicData_destination_order_get(long jarg1, TopicBuiltinTopicData jarg1_);
  public final static native void TopicBuiltinTopicData_history_set(long jarg1, TopicBuiltinTopicData jarg1_, long jarg2, HistoryQosPolicy jarg2_);
  public final static native long TopicBuiltinTopicData_history_get(long jarg1, TopicBuiltinTopicData jarg1_);
  public final static native void TopicBuiltinTopicData_resource_limits_set(long jarg1, TopicBuiltinTopicData jarg1_, long jarg2, ResourceLimitsQosPolicy jarg2_);
  public final static native long TopicBuiltinTopicData_resource_limits_get(long jarg1, TopicBuiltinTopicData jarg1_);
  public final static native void TopicBuiltinTopicData_ownership_set(long jarg1, TopicBuiltinTopicData jarg1_, long jarg2, OwnershipQosPolicy jarg2_);
  public final static native long TopicBuiltinTopicData_ownership_get(long jarg1, TopicBuiltinTopicData jarg1_);
  public final static native void TopicBuiltinTopicData_topic_data_set(long jarg1, TopicBuiltinTopicData jarg1_, long jarg2, TopicDataQosPolicy jarg2_);
  public final static native long TopicBuiltinTopicData_topic_data_get(long jarg1, TopicBuiltinTopicData jarg1_);
  public final static native long new_TopicBuiltinTopicData();
  public final static native void delete_TopicBuiltinTopicData(long jarg1);
  public final static native void PublicationBuiltinTopicData_key_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, BuiltinTopicKey_t jarg2_);
  public final static native long PublicationBuiltinTopicData_key_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_participant_key_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, BuiltinTopicKey_t jarg2_);
  public final static native long PublicationBuiltinTopicData_participant_key_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_topic_name_set(long jarg1, PublicationBuiltinTopicData jarg1_, String jarg2);
  public final static native String PublicationBuiltinTopicData_topic_name_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_type_name_set(long jarg1, PublicationBuiltinTopicData jarg1_, String jarg2);
  public final static native String PublicationBuiltinTopicData_type_name_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_durability_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, DurabilityQosPolicy jarg2_);
  public final static native long PublicationBuiltinTopicData_durability_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_durability_service_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, DurabilityServiceQosPolicy jarg2_);
  public final static native long PublicationBuiltinTopicData_durability_service_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_deadline_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, DeadlineQosPolicy jarg2_);
  public final static native long PublicationBuiltinTopicData_deadline_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_latency_budget_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, LatencyBudgetQosPolicy jarg2_);
  public final static native long PublicationBuiltinTopicData_latency_budget_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_liveliness_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, LivelinessQosPolicy jarg2_);
  public final static native long PublicationBuiltinTopicData_liveliness_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_reliability_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, ReliabilityQosPolicy jarg2_);
  public final static native long PublicationBuiltinTopicData_reliability_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_lifespan_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, LifespanQosPolicy jarg2_);
  public final static native long PublicationBuiltinTopicData_lifespan_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_user_data_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, UserDataQosPolicy jarg2_);
  public final static native long PublicationBuiltinTopicData_user_data_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_ownership_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, OwnershipQosPolicy jarg2_);
  public final static native long PublicationBuiltinTopicData_ownership_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_ownership_strength_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, OwnershipStrengthQosPolicy jarg2_);
  public final static native long PublicationBuiltinTopicData_ownership_strength_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_destination_order_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, DestinationOrderQosPolicy jarg2_);
  public final static native long PublicationBuiltinTopicData_destination_order_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_presentation_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, PresentationQosPolicy jarg2_);
  public final static native long PublicationBuiltinTopicData_presentation_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_partition_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, PartitionQosPolicy jarg2_);
  public final static native long PublicationBuiltinTopicData_partition_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_topic_data_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, TopicDataQosPolicy jarg2_);
  public final static native long PublicationBuiltinTopicData_topic_data_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native void PublicationBuiltinTopicData_group_data_set(long jarg1, PublicationBuiltinTopicData jarg1_, long jarg2, GroupDataQosPolicy jarg2_);
  public final static native long PublicationBuiltinTopicData_group_data_get(long jarg1, PublicationBuiltinTopicData jarg1_);
  public final static native long new_PublicationBuiltinTopicData();
  public final static native void delete_PublicationBuiltinTopicData(long jarg1);
  public final static native void SubscriptionBuiltinTopicData_key_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, long jarg2, BuiltinTopicKey_t jarg2_);
  public final static native long SubscriptionBuiltinTopicData_key_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native void SubscriptionBuiltinTopicData_participant_key_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, long jarg2, BuiltinTopicKey_t jarg2_);
  public final static native long SubscriptionBuiltinTopicData_participant_key_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native void SubscriptionBuiltinTopicData_topic_name_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, String jarg2);
  public final static native String SubscriptionBuiltinTopicData_topic_name_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native void SubscriptionBuiltinTopicData_type_name_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, String jarg2);
  public final static native String SubscriptionBuiltinTopicData_type_name_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native void SubscriptionBuiltinTopicData_durability_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, long jarg2, DurabilityQosPolicy jarg2_);
  public final static native long SubscriptionBuiltinTopicData_durability_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native void SubscriptionBuiltinTopicData_deadline_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, long jarg2, DeadlineQosPolicy jarg2_);
  public final static native long SubscriptionBuiltinTopicData_deadline_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native void SubscriptionBuiltinTopicData_latency_budget_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, long jarg2, LatencyBudgetQosPolicy jarg2_);
  public final static native long SubscriptionBuiltinTopicData_latency_budget_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native void SubscriptionBuiltinTopicData_liveliness_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, long jarg2, LivelinessQosPolicy jarg2_);
  public final static native long SubscriptionBuiltinTopicData_liveliness_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native void SubscriptionBuiltinTopicData_reliability_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, long jarg2, ReliabilityQosPolicy jarg2_);
  public final static native long SubscriptionBuiltinTopicData_reliability_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native void SubscriptionBuiltinTopicData_ownership_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, long jarg2, OwnershipQosPolicy jarg2_);
  public final static native long SubscriptionBuiltinTopicData_ownership_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native void SubscriptionBuiltinTopicData_destination_order_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, long jarg2, DestinationOrderQosPolicy jarg2_);
  public final static native long SubscriptionBuiltinTopicData_destination_order_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native void SubscriptionBuiltinTopicData_user_data_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, long jarg2, UserDataQosPolicy jarg2_);
  public final static native long SubscriptionBuiltinTopicData_user_data_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native void SubscriptionBuiltinTopicData_time_based_filter_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, long jarg2, TimeBasedFilterQosPolicy jarg2_);
  public final static native long SubscriptionBuiltinTopicData_time_based_filter_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native void SubscriptionBuiltinTopicData_presentation_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, long jarg2, PresentationQosPolicy jarg2_);
  public final static native long SubscriptionBuiltinTopicData_presentation_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native void SubscriptionBuiltinTopicData_partition_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, long jarg2, PartitionQosPolicy jarg2_);
  public final static native long SubscriptionBuiltinTopicData_partition_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native void SubscriptionBuiltinTopicData_topic_data_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, long jarg2, TopicDataQosPolicy jarg2_);
  public final static native long SubscriptionBuiltinTopicData_topic_data_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native void SubscriptionBuiltinTopicData_group_data_set(long jarg1, SubscriptionBuiltinTopicData jarg1_, long jarg2, GroupDataQosPolicy jarg2_);
  public final static native long SubscriptionBuiltinTopicData_group_data_get(long jarg1, SubscriptionBuiltinTopicData jarg1_);
  public final static native long new_SubscriptionBuiltinTopicData();
  public final static native void delete_SubscriptionBuiltinTopicData(long jarg1);
  public final static native void Condition_b_trigger_value_set(long jarg1, Condition jarg1_, boolean jarg2);
  public final static native boolean Condition_b_trigger_value_get(long jarg1, Condition jarg1_);
  public final static native void Condition_condition_type_set(long jarg1, Condition jarg1_, long jarg2);
  public final static native long Condition_condition_type_get(long jarg1, Condition jarg1_);
  public final static native long new_Condition();
  public final static native void delete_Condition(long jarg1);
  public final static native void QueryCondition_b_trigger_value_set(long jarg1, QueryCondition jarg1_, boolean jarg2);
  public final static native boolean QueryCondition_b_trigger_value_get(long jarg1, QueryCondition jarg1_);
  public final static native void QueryCondition_condition_type_set(long jarg1, QueryCondition jarg1_, long jarg2);
  public final static native long QueryCondition_condition_type_get(long jarg1, QueryCondition jarg1_);
  public final static native long new_QueryCondition();
  public final static native void delete_QueryCondition(long jarg1);
  public final static native void ReadCondition_b_trigger_value_set(long jarg1, ReadCondition jarg1_, boolean jarg2);
  public final static native boolean ReadCondition_b_trigger_value_get(long jarg1, ReadCondition jarg1_);
  public final static native void ReadCondition_condition_type_set(long jarg1, ReadCondition jarg1_, long jarg2);
  public final static native long ReadCondition_condition_type_get(long jarg1, ReadCondition jarg1_);
  public final static native long new_ReadCondition();
  public final static native void delete_ReadCondition(long jarg1);
  public final static native void StatusCondition_b_trigger_value_set(long jarg1, StatusCondition jarg1_, boolean jarg2);
  public final static native boolean StatusCondition_b_trigger_value_get(long jarg1, StatusCondition jarg1_);
  public final static native void StatusCondition_condition_type_set(long jarg1, StatusCondition jarg1_, long jarg2);
  public final static native long StatusCondition_condition_type_get(long jarg1, StatusCondition jarg1_);
  public final static native long new_StatusCondition();
  public final static native void delete_StatusCondition(long jarg1);
  public final static native void TopicDescription_topic_name_set(long jarg1, TopicDescription jarg1_, String jarg2);
  public final static native String TopicDescription_topic_name_get(long jarg1, TopicDescription jarg1_);
  public final static native void TopicDescription_type_name_set(long jarg1, TopicDescription jarg1_, String jarg2);
  public final static native String TopicDescription_type_name_get(long jarg1, TopicDescription jarg1_);
  public final static native long new_TopicDescription();
  public final static native void delete_TopicDescription(long jarg1);
  public final static native void TopicListener_not_used_set(long jarg1, TopicListener jarg1_, int jarg2);
  public final static native int TopicListener_not_used_get(long jarg1, TopicListener jarg1_);
  public final static native long new_TopicListener();
  public final static native void delete_TopicListener(long jarg1);
  public final static native void SubscriberListener_not_used_set(long jarg1, SubscriberListener jarg1_, int jarg2);
  public final static native int SubscriberListener_not_used_get(long jarg1, SubscriberListener jarg1_);
  public final static native long new_SubscriberListener();
  public final static native void delete_SubscriberListener(long jarg1);
  public final static native void PublisherListener_not_used_set(long jarg1, PublisherListener jarg1_, int jarg2);
  public final static native int PublisherListener_not_used_get(long jarg1, PublisherListener jarg1_);
  public final static native long new_PublisherListener();
  public final static native void delete_PublisherListener(long jarg1);
  public final static native void DomainParticipantListener_not_used_set(long jarg1, DomainParticipantListener jarg1_, int jarg2);
  public final static native int DomainParticipantListener_not_used_get(long jarg1, DomainParticipantListener jarg1_);
  public final static native long new_DomainParticipantListener();
  public final static native void delete_DomainParticipantListener(long jarg1);
  public final static native void DataWriterListener_not_used_set(long jarg1, DataWriterListener jarg1_, int jarg2);
  public final static native int DataWriterListener_not_used_get(long jarg1, DataWriterListener jarg1_);
  public final static native long new_DataWriterListener();
  public final static native void delete_DataWriterListener(long jarg1);
  public final static native void DataReaderListener_not_used_set(long jarg1, DataReaderListener jarg1_, int jarg2);
  public final static native int DataReaderListener_not_used_get(long jarg1, DataReaderListener jarg1_);
  public final static native long new_DataReaderListener();
  public final static native void delete_DataReaderListener(long jarg1);
  public final static native void FooTypeSupport_i_size_set(long jarg1, FooTypeSupport jarg1_, int jarg2);
  public final static native int FooTypeSupport_i_size_get(long jarg1, FooTypeSupport jarg1_);
  public final static native void FooTypeSupport_i_parameters_set(long jarg1, FooTypeSupport jarg1_, int jarg2);
  public final static native int FooTypeSupport_i_parameters_get(long jarg1, FooTypeSupport jarg1_);
  public final static native long new_FooTypeSupport();
  public final static native void delete_FooTypeSupport(long jarg1);
  public final static native void InstanceHandleSeq_i_seq_set(long jarg1, InstanceHandleSeq jarg1_, int jarg2);
  public final static native int InstanceHandleSeq_i_seq_get(long jarg1, InstanceHandleSeq jarg1_);
  public final static native void InstanceHandleSeq_pp_instancehandle_set(long jarg1, InstanceHandleSeq jarg1_, long jarg2);
  public final static native long InstanceHandleSeq_pp_instancehandle_get(long jarg1, InstanceHandleSeq jarg1_);
  public final static native long new_InstanceHandleSeq();
  public final static native void delete_InstanceHandleSeq(long jarg1);
  public final static native void Foo_dummy_set(long jarg1, Foo jarg1_, int jarg2);
  public final static native int Foo_dummy_get(long jarg1, Foo jarg1_);
  public final static native long new_Foo();
  public final static native void delete_Foo(long jarg1);
  public final static native void FooSeq_i_seq_set(long jarg1, FooSeq jarg1_, int jarg2);
  public final static native int FooSeq_i_seq_get(long jarg1, FooSeq jarg1_);
  public final static native void FooSeq_pp_foo_set(long jarg1, FooSeq jarg1_, long jarg2);
  public final static native long FooSeq_pp_foo_get(long jarg1, FooSeq jarg1_);
  public final static native long new_FooSeq();
  public final static native void delete_FooSeq(long jarg1);
  public final static native void SampleInfo_sample_state_set(long jarg1, SampleInfo jarg1_, long jarg2);
  public final static native long SampleInfo_sample_state_get(long jarg1, SampleInfo jarg1_);
  public final static native void SampleInfo_view_state_set(long jarg1, SampleInfo jarg1_, long jarg2);
  public final static native long SampleInfo_view_state_get(long jarg1, SampleInfo jarg1_);
  public final static native void SampleInfo_instance_state_set(long jarg1, SampleInfo jarg1_, long jarg2);
  public final static native long SampleInfo_instance_state_get(long jarg1, SampleInfo jarg1_);
  public final static native void SampleInfo_source_timestamp_set(long jarg1, SampleInfo jarg1_, long jarg2, Time_t jarg2_);
  public final static native long SampleInfo_source_timestamp_get(long jarg1, SampleInfo jarg1_);
  public final static native void SampleInfo_instance_handle_set(long jarg1, SampleInfo jarg1_, int jarg2);
  public final static native int SampleInfo_instance_handle_get(long jarg1, SampleInfo jarg1_);
  public final static native void SampleInfo_publication_handle_set(long jarg1, SampleInfo jarg1_, int jarg2);
  public final static native int SampleInfo_publication_handle_get(long jarg1, SampleInfo jarg1_);
  public final static native void SampleInfo_disposed_generation_count_set(long jarg1, SampleInfo jarg1_, int jarg2);
  public final static native int SampleInfo_disposed_generation_count_get(long jarg1, SampleInfo jarg1_);
  public final static native void SampleInfo_no_writers_generation_count_set(long jarg1, SampleInfo jarg1_, int jarg2);
  public final static native int SampleInfo_no_writers_generation_count_get(long jarg1, SampleInfo jarg1_);
  public final static native void SampleInfo_sample_rank_set(long jarg1, SampleInfo jarg1_, int jarg2);
  public final static native int SampleInfo_sample_rank_get(long jarg1, SampleInfo jarg1_);
  public final static native void SampleInfo_generation_rank_set(long jarg1, SampleInfo jarg1_, int jarg2);
  public final static native int SampleInfo_generation_rank_get(long jarg1, SampleInfo jarg1_);
  public final static native void SampleInfo_absolute_generation_rank_set(long jarg1, SampleInfo jarg1_, int jarg2);
  public final static native int SampleInfo_absolute_generation_rank_get(long jarg1, SampleInfo jarg1_);
  public final static native void SampleInfo_valid_data_set(long jarg1, SampleInfo jarg1_, boolean jarg2);
  public final static native boolean SampleInfo_valid_data_get(long jarg1, SampleInfo jarg1_);
  public final static native void SampleInfo_disposed_timestamp_set(long jarg1, SampleInfo jarg1_, long jarg2, Time_t jarg2_);
  public final static native long SampleInfo_disposed_timestamp_get(long jarg1, SampleInfo jarg1_);
  public final static native long new_SampleInfo();
  public final static native void delete_SampleInfo(long jarg1);
  public final static native void SampleInfoSeq_i_seq_set(long jarg1, SampleInfoSeq jarg1_, int jarg2);
  public final static native int SampleInfoSeq_i_seq_get(long jarg1, SampleInfoSeq jarg1_);
  public final static native void SampleInfoSeq_pp_sample_infos_set(long jarg1, SampleInfoSeq jarg1_, long jarg2);
  public final static native long SampleInfoSeq_pp_sample_infos_get(long jarg1, SampleInfoSeq jarg1_);
  public final static native long new_SampleInfoSeq();
  public final static native void delete_SampleInfoSeq(long jarg1);
  public final static native void ConditionSeq_i_seq_set(long jarg1, ConditionSeq jarg1_, int jarg2);
  public final static native int ConditionSeq_i_seq_get(long jarg1, ConditionSeq jarg1_);
  public final static native void ConditionSeq_pp_conditions_set(long jarg1, ConditionSeq jarg1_, long jarg2);
  public final static native long ConditionSeq_pp_conditions_get(long jarg1, ConditionSeq jarg1_);
  public final static native long new_ConditionSeq();
  public final static native void delete_ConditionSeq(long jarg1);
  public final static native void DataReaderSeq_i_seq_set(long jarg1, DataReaderSeq jarg1_, int jarg2);
  public final static native int DataReaderSeq_i_seq_get(long jarg1, DataReaderSeq jarg1_);
  public final static native void DataReaderSeq_pp_datareaders_set(long jarg1, DataReaderSeq jarg1_, long jarg2);
  public final static native long DataReaderSeq_pp_datareaders_get(long jarg1, DataReaderSeq jarg1_);
  public final static native long new_DataReaderSeq();
  public final static native void delete_DataReaderSeq(long jarg1);
  public final static native void message_t_i_datasize_set(long jarg1, message_t jarg1_, int jarg2);
  public final static native int message_t_i_datasize_get(long jarg1, message_t jarg1_);
  public final static native void message_t_v_data_set(long jarg1, message_t jarg1_, long jarg2);
  public final static native long message_t_v_data_get(long jarg1, message_t jarg1_);
  public final static native long new_message_t();
  public final static native void delete_message_t(long jarg1);
  public final static native long new_StringSeq2();
  public final static native long StringSeq2_getStringSeq(long jarg1, StringSeq2 jarg1_);
  public final static native long StringSeq2_getStringSeqPtr(long jarg1, StringSeq2 jarg1_);
  public final static native void StringSeq2_add(long jarg1, StringSeq2 jarg1_, String jarg2);
  public final static native void delete_StringSeq2(long jarg1);
  public final static native long new_ConditionSeq2();
  public final static native long ConditionSeq2_getConditionSeq(long jarg1, ConditionSeq2 jarg1_);
  public final static native long ConditionSeq2_getConditionSeqPtr(long jarg1, ConditionSeq2 jarg1_);
  public final static native void delete_ConditionSeq2(long jarg1);
  public final static native long new_SampleInfoSeq2();
  public final static native void delete_SampleInfoSeq2(long jarg1);
  public final static native long SampleInfoSeq2_getSampleInfoSeq(long jarg1, SampleInfoSeq2 jarg1_);
  public final static native long SampleInfoSeq2_getSampleInfoSeqPtr(long jarg1, SampleInfoSeq2 jarg1_);
  public final static native long new_Message2__SWIG_0();
  public final static native long new_Message2__SWIG_1(long jarg1, message_t jarg1_);
  public final static native void delete_Message2(long jarg1);
  public final static native void Message2_removeMessage(long jarg1, Message2 jarg1_);
  public final static native long Message2_getValue(long jarg1, Message2 jarg1_);
  public final static native long new_FooSeq2();
  public final static native void delete_FooSeq2(long jarg1);
  public final static native long FooSeq2_getFooSeq(long jarg1, FooSeq2 jarg1_);
  public final static native long FooSeq2_getFooSeqPtr(long jarg1, FooSeq2 jarg1_);
  public final static native boolean FooSeq2_has_data(long jarg1, FooSeq2 jarg1_);
  public final static native int FooSeq2_getSize(long jarg1, FooSeq2 jarg1_);
  public final static native long FooSeq2_getMessage(long jarg1, FooSeq2 jarg1_);
  public final static native long new_FooTypeSupport2();
  public final static native long FooTypeSupport2_getFooTypeSupport(long jarg1, FooTypeSupport2 jarg1_);
  public final static native int FooTypeSupport2_register_type(long jarg1, FooTypeSupport2 jarg1_, long jarg2, DomainParticipant2 jarg2_, String jarg3);
  public final static native String FooTypeSupport2_get_type_name(long jarg1, FooTypeSupport2 jarg1_);
  public final static native boolean FooTypeSupport2_insert_parameter__SWIG_0(long jarg1, FooTypeSupport2 jarg1_, String jarg2, int jarg3, boolean jarg4);
  public final static native boolean FooTypeSupport2_insert_parameter__SWIG_1(long jarg1, FooTypeSupport2 jarg1_, String jarg2, int jarg3);
  public final static native boolean FooTypeSupport2_insert_parameter_struct__SWIG_0(long jarg1, FooTypeSupport2 jarg1_, String jarg2, int jarg3, boolean jarg4);
  public final static native boolean FooTypeSupport2_insert_parameter_struct__SWIG_1(long jarg1, FooTypeSupport2 jarg1_, String jarg2, int jarg3);
  public final static native void FooTypeSupport2_setFootypeSize(long jarg1, FooTypeSupport2 jarg1_, int jarg2);
  public final static native void delete_FooTypeSupport2(long jarg1);
  public final static native long new_Foo2__SWIG_0(long jarg1);
  public final static native long new_Foo2__SWIG_1();
  public final static native long new_Foo2__SWIG_2(long jarg1, FooTypeSupport2 jarg1_);
  public final static native long new_Foo2__SWIG_3(long jarg1, FooTypeSupport2 jarg1_, long jarg2);
  public final static native void delete_Foo2(long jarg1);
  public final static native void Foo2_removeFoo(long jarg1, Foo2 jarg1_);
  public final static native long Foo2_getFoo(long jarg1, Foo2 jarg1_);
  public final static native int Foo2_setString(long jarg1, Foo2 jarg1_, String jarg2, String jarg3);
  public final static native int Foo2_setFloat(long jarg1, Foo2 jarg1_, String jarg2, float jarg3);
  public final static native int Foo2_setInt8(long jarg1, Foo2 jarg1_, String jarg2, byte jarg3);
  public final static native int Foo2_setInt16(long jarg1, Foo2 jarg1_, String jarg2, short jarg3);
  public final static native int Foo2_setInt32(long jarg1, Foo2 jarg1_, String jarg2, int jarg3);
  public final static native int Foo2_setInt64(long jarg1, Foo2 jarg1_, String jarg2, long jarg3);
  public final static native int Foo2_setUint8(long jarg1, Foo2 jarg1_, String jarg2, short jarg3);
  public final static native int Foo2_setUint16(long jarg1, Foo2 jarg1_, String jarg2, int jarg3);
  public final static native int Foo2_setUint32(long jarg1, Foo2 jarg1_, String jarg2, long jarg3);
  public final static native int Foo2_setUint64(long jarg1, Foo2 jarg1_, String jarg2, java.math.BigInteger jarg3);
  public final static native int Foo2_setDouble(long jarg1, Foo2 jarg1_, String jarg2, double jarg3);
  public final static native int Foo2_setBoolean(long jarg1, Foo2 jarg1_, String jarg2, boolean jarg3);
  public final static native int Foo2_setByte(long jarg1, Foo2 jarg1_, String jarg2, byte jarg3);
  public final static native String Foo2_getString(long jarg1, Foo2 jarg1_, String jarg2);
  public final static native float Foo2_getFloat(long jarg1, Foo2 jarg1_, String jarg2);
  public final static native byte Foo2_getInt8(long jarg1, Foo2 jarg1_, String jarg2);
  public final static native short Foo2_getInt16(long jarg1, Foo2 jarg1_, String jarg2);
  public final static native int Foo2_getInt32(long jarg1, Foo2 jarg1_, String jarg2);
  public final static native long Foo2_getInt64(long jarg1, Foo2 jarg1_, String jarg2);
  public final static native short Foo2_getUint8(long jarg1, Foo2 jarg1_, String jarg2);
  public final static native int Foo2_getUint16(long jarg1, Foo2 jarg1_, String jarg2);
  public final static native long Foo2_getUint32(long jarg1, Foo2 jarg1_, String jarg2);
  public final static native java.math.BigInteger Foo2_getUint64(long jarg1, Foo2 jarg1_, String jarg2);
  public final static native double Foo2_getDouble(long jarg1, Foo2 jarg1_, String jarg2);
  public final static native boolean Foo2_getBoolean(long jarg1, Foo2 jarg1_, String jarg2);
  public final static native byte Foo2_getByte(long jarg1, Foo2 jarg1_, String jarg2);
  public final static native long new_DomainParticipantQos2();
  public final static native long DomainParticipantQos2_getQos(long jarg1, DomainParticipantQos2 jarg1_);
  public final static native void delete_DomainParticipantQos2(long jarg1);
  public final static native long new_SampleInfo2();
  public final static native long SampleInfo2_getSampleInfo(long jarg1, SampleInfo2 jarg1_);
  public final static native void delete_SampleInfo2(long jarg1);
  public final static native void delete_DomainParticipantListenerCallBack(long jarg1);
  public final static native void DomainParticipantListenerCallBack_on_inconsistent_topic(long jarg1, DomainParticipantListenerCallBack jarg1_, long jarg2, Topic jarg2_, long jarg3, InconsistentTopicStatus jarg3_);
  public final static native void DomainParticipantListenerCallBack_on_offered_deadline_missed(long jarg1, DomainParticipantListenerCallBack jarg1_, long jarg2, DataWriter jarg2_, long jarg3, OfferedDeadlineMissedStatus jarg3_);
  public final static native void DomainParticipantListenerCallBack_on_offered_incompatible_qos(long jarg1, DomainParticipantListenerCallBack jarg1_, long jarg2, DataWriter jarg2_, long jarg3, OfferedIncompatibleQosStatus jarg3_);
  public final static native void DomainParticipantListenerCallBack_on_liveliness_lost(long jarg1, DomainParticipantListenerCallBack jarg1_, long jarg2, DataWriter jarg2_, long jarg3, LivelinessLostStatus jarg3_);
  public final static native void DomainParticipantListenerCallBack_on_publication_matched(long jarg1, DomainParticipantListenerCallBack jarg1_, long jarg2, DataWriter jarg2_, long jarg3, PublicationMatchedStatus jarg3_);
  public final static native void DomainParticipantListenerCallBack_on_requested_deadline_missed(long jarg1, DomainParticipantListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, RequestedDeadlineMissedStatus jarg3_);
  public final static native void DomainParticipantListenerCallBack_on_requested_incompatible_qos(long jarg1, DomainParticipantListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, RequestedIncompatibleQosStatus jarg3_);
  public final static native void DomainParticipantListenerCallBack_on_sample_rejected(long jarg1, DomainParticipantListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, SampleRejectedStatus jarg3_);
  public final static native void DomainParticipantListenerCallBack_on_liveliness_changed(long jarg1, DomainParticipantListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, LivelinessChangedStatus jarg3_);
  public final static native void DomainParticipantListenerCallBack_on_data_available(long jarg1, DomainParticipantListenerCallBack jarg1_, long jarg2, DataReader jarg2_);
  public final static native void DomainParticipantListenerCallBack_on_subscription_matched(long jarg1, DomainParticipantListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, SubscriptionMatchedStatus jarg3_);
  public final static native void DomainParticipantListenerCallBack_on_sample_lost(long jarg1, DomainParticipantListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, SampleLostStatus jarg3_);
  public final static native void DomainParticipantListenerCallBack_on_data_on_readers(long jarg1, DomainParticipantListenerCallBack jarg1_, long jarg2, Subscriber jarg2_);
  public final static native long new_DomainParticipantListenerCallBack();
  public final static native void DomainParticipantListenerCallBack_director_connect(DomainParticipantListenerCallBack obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void DomainParticipantListenerCallBack_change_ownership(DomainParticipantListenerCallBack obj, long cptr, boolean take_or_release);
  public final static native long new_DomainParticipantListener2__SWIG_0(long jarg1, DomainParticipantListener jarg1_);
  public final static native long new_DomainParticipantListener2__SWIG_1();
  public final static native long DomainParticipantListener2_getListener(long jarg1, DomainParticipantListener2 jarg1_);
  public final static native long DomainParticipantListener2_getListenerPtr(long jarg1, DomainParticipantListener2 jarg1_);
  public final static native void DomainParticipantListener2_setCallback(long jarg1, DomainParticipantListener2 jarg1_, long jarg2, DomainParticipantListenerCallBack jarg2_);
  public final static native void DomainParticipantListener2__callback_set(long jarg1, DomainParticipantListenerCallBack jarg1_);
  public final static native long DomainParticipantListener2__callback_get();
  public final static native void delete_DomainParticipantListener2(long jarg1);
  public final static native void delete_PublisherListenerCallBack(long jarg1);
  public final static native void PublisherListenerCallBack_on_offered_deadline_missed(long jarg1, PublisherListenerCallBack jarg1_, long jarg2, DataWriter jarg2_, long jarg3, OfferedDeadlineMissedStatus jarg3_);
  public final static native void PublisherListenerCallBack_on_offered_incompatible_qos(long jarg1, PublisherListenerCallBack jarg1_, long jarg2, DataWriter jarg2_, long jarg3, OfferedIncompatibleQosStatus jarg3_);
  public final static native void PublisherListenerCallBack_on_liveliness_lost(long jarg1, PublisherListenerCallBack jarg1_, long jarg2, DataWriter jarg2_, long jarg3, LivelinessLostStatus jarg3_);
  public final static native void PublisherListenerCallBack_on_publication_matched(long jarg1, PublisherListenerCallBack jarg1_, long jarg2, DataWriter jarg2_, long jarg3, PublicationMatchedStatus jarg3_);
  public final static native long new_PublisherListenerCallBack();
  public final static native void PublisherListenerCallBack_director_connect(PublisherListenerCallBack obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void PublisherListenerCallBack_change_ownership(PublisherListenerCallBack obj, long cptr, boolean take_or_release);
  public final static native long new_PublisherListener2__SWIG_0(long jarg1, PublisherListener jarg1_);
  public final static native long new_PublisherListener2__SWIG_1();
  public final static native long PublisherListener2_getListener(long jarg1, PublisherListener2 jarg1_);
  public final static native long PublisherListener2_getListenerPtr(long jarg1, PublisherListener2 jarg1_);
  public final static native void PublisherListener2_setCallback(long jarg1, PublisherListener2 jarg1_, long jarg2, PublisherListenerCallBack jarg2_);
  public final static native void PublisherListener2__callback_set(long jarg1, PublisherListenerCallBack jarg1_);
  public final static native long PublisherListener2__callback_get();
  public final static native void delete_PublisherListener2(long jarg1);
  public final static native void delete_SubscriberListenerCallBack(long jarg1);
  public final static native void SubscriberListenerCallBack_on_requested_deadline_missed(long jarg1, SubscriberListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, RequestedDeadlineMissedStatus jarg3_);
  public final static native void SubscriberListenerCallBack_on_requested_incompatible_qos(long jarg1, SubscriberListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, RequestedIncompatibleQosStatus jarg3_);
  public final static native void SubscriberListenerCallBack_on_sample_rejected(long jarg1, SubscriberListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, SampleRejectedStatus jarg3_);
  public final static native void SubscriberListenerCallBack_on_liveliness_changed(long jarg1, SubscriberListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, LivelinessChangedStatus jarg3_);
  public final static native void SubscriberListenerCallBack_on_data_available(long jarg1, SubscriberListenerCallBack jarg1_, long jarg2, DataReader jarg2_);
  public final static native void SubscriberListenerCallBack_on_subscription_matched(long jarg1, SubscriberListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, SubscriptionMatchedStatus jarg3_);
  public final static native void SubscriberListenerCallBack_on_sample_lost(long jarg1, SubscriberListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, SampleLostStatus jarg3_);
  public final static native void SubscriberListenerCallBack_on_data_on_readers(long jarg1, SubscriberListenerCallBack jarg1_, long jarg2, Subscriber jarg2_);
  public final static native long new_SubscriberListener2__SWIG_0(long jarg1, SubscriberListener jarg1_);
  public final static native long new_SubscriberListener2__SWIG_1();
  public final static native long SubscriberListener2_getListener(long jarg1, SubscriberListener2 jarg1_);
  public final static native long SubscriberListener2_getListenerPtr(long jarg1, SubscriberListener2 jarg1_);
  public final static native void SubscriberListener2_setCallback(long jarg1, SubscriberListener2 jarg1_, long jarg2, SubscriberListenerCallBack jarg2_);
  public final static native void SubscriberListener2__callback_set(long jarg1, SubscriberListenerCallBack jarg1_);
  public final static native long SubscriberListener2__callback_get();
  public final static native void delete_SubscriberListener2(long jarg1);
  public final static native void delete_TopicListenerCallBack(long jarg1);
  public final static native void TopicListenerCallBack_on_inconsistent_topic(long jarg1, TopicListenerCallBack jarg1_, long jarg2, Topic jarg2_, long jarg3, InconsistentTopicStatus jarg3_);
  public final static native long new_TopicListenerCallBack();
  public final static native void TopicListenerCallBack_director_connect(TopicListenerCallBack obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void TopicListenerCallBack_change_ownership(TopicListenerCallBack obj, long cptr, boolean take_or_release);
  public final static native long new_TopicListener2__SWIG_0(long jarg1, TopicListener jarg1_);
  public final static native long new_TopicListener2__SWIG_1();
  public final static native long TopicListener2_getListener(long jarg1, TopicListener2 jarg1_);
  public final static native long TopicListener2_getListenerPtr(long jarg1, TopicListener2 jarg1_);
  public final static native void TopicListener2_setCallback(long jarg1, TopicListener2 jarg1_, long jarg2, TopicListenerCallBack jarg2_);
  public final static native void TopicListener2__callback_set(long jarg1, TopicListenerCallBack jarg1_);
  public final static native long TopicListener2__callback_get();
  public final static native void delete_TopicListener2(long jarg1);
  public final static native void delete_DataWriterListenerCallBack(long jarg1);
  public final static native void DataWriterListenerCallBack_on_offered_deadline_missed(long jarg1, DataWriterListenerCallBack jarg1_, long jarg2, DataWriter jarg2_, long jarg3, OfferedDeadlineMissedStatus jarg3_);
  public final static native void DataWriterListenerCallBack_on_offered_incompatible_qos(long jarg1, DataWriterListenerCallBack jarg1_, long jarg2, DataWriter jarg2_, long jarg3, OfferedIncompatibleQosStatus jarg3_);
  public final static native void DataWriterListenerCallBack_on_liveliness_lost(long jarg1, DataWriterListenerCallBack jarg1_, long jarg2, DataWriter jarg2_, long jarg3, LivelinessLostStatus jarg3_);
  public final static native void DataWriterListenerCallBack_on_publication_matched(long jarg1, DataWriterListenerCallBack jarg1_, long jarg2, DataWriter jarg2_, long jarg3, PublicationMatchedStatus jarg3_);
  public final static native long new_DataWriterListenerCallBack();
  public final static native void DataWriterListenerCallBack_director_connect(DataWriterListenerCallBack obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void DataWriterListenerCallBack_change_ownership(DataWriterListenerCallBack obj, long cptr, boolean take_or_release);
  public final static native long new_DataWriterListener2__SWIG_0(long jarg1, DataWriterListener jarg1_);
  public final static native long new_DataWriterListener2__SWIG_1();
  public final static native long DataWriterListener2_getListener(long jarg1, DataWriterListener2 jarg1_);
  public final static native long DataWriterListener2_getListenerPtr(long jarg1, DataWriterListener2 jarg1_);
  public final static native void DataWriterListener2_setCallback(long jarg1, DataWriterListener2 jarg1_, long jarg2, DataWriterListenerCallBack jarg2_);
  public final static native void DataWriterListener2__callback_set(long jarg1, DataWriterListenerCallBack jarg1_);
  public final static native long DataWriterListener2__callback_get();
  public final static native void delete_DataWriterListener2(long jarg1);
  public final static native void delete_DataReaderListenerCallBack(long jarg1);
  public final static native void DataReaderListenerCallBack_on_inconsistent_topic(long jarg1, DataReaderListenerCallBack jarg1_, long jarg2, Topic jarg2_, long jarg3, InconsistentTopicStatus jarg3_);
  public final static native void DataReaderListenerCallBack_on_offered_deadline_missed(long jarg1, DataReaderListenerCallBack jarg1_, long jarg2, DataWriter jarg2_, long jarg3, OfferedDeadlineMissedStatus jarg3_);
  public final static native void DataReaderListenerCallBack_on_offered_incompatible_qos(long jarg1, DataReaderListenerCallBack jarg1_, long jarg2, DataWriter jarg2_, long jarg3, OfferedIncompatibleQosStatus jarg3_);
  public final static native void DataReaderListenerCallBack_on_liveliness_lost(long jarg1, DataReaderListenerCallBack jarg1_, long jarg2, DataWriter jarg2_, long jarg3, LivelinessLostStatus jarg3_);
  public final static native void DataReaderListenerCallBack_on_publication_matched(long jarg1, DataReaderListenerCallBack jarg1_, long jarg2, DataWriter jarg2_, long jarg3, PublicationMatchedStatus jarg3_);
  public final static native void DataReaderListenerCallBack_on_requested_deadline_missed(long jarg1, DataReaderListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, RequestedDeadlineMissedStatus jarg3_);
  public final static native void DataReaderListenerCallBack_on_requested_incompatible_qos(long jarg1, DataReaderListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, RequestedIncompatibleQosStatus jarg3_);
  public final static native void DataReaderListenerCallBack_on_sample_rejected(long jarg1, DataReaderListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, SampleRejectedStatus jarg3_);
  public final static native void DataReaderListenerCallBack_on_liveliness_changed(long jarg1, DataReaderListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, LivelinessChangedStatus jarg3_);
  public final static native void DataReaderListenerCallBack_on_data_available(long jarg1, DataReaderListenerCallBack jarg1_, long jarg2, DataReader jarg2_);
  public final static native void DataReaderListenerCallBack_on_subscription_matched(long jarg1, DataReaderListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, SubscriptionMatchedStatus jarg3_);
  public final static native void DataReaderListenerCallBack_on_sample_lost(long jarg1, DataReaderListenerCallBack jarg1_, long jarg2, DataReader jarg2_, long jarg3, SampleLostStatus jarg3_);
  public final static native void DataReaderListenerCallBack_on_data_on_readers(long jarg1, DataReaderListenerCallBack jarg1_, long jarg2, Subscriber jarg2_);
  public final static native long new_DataReaderListenerCallBack();
  public final static native void DataReaderListenerCallBack_director_connect(DataReaderListenerCallBack obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void DataReaderListenerCallBack_change_ownership(DataReaderListenerCallBack obj, long cptr, boolean take_or_release);
  public final static native long new_DataReaderListener2__SWIG_0(long jarg1, DataReaderListener jarg1_);
  public final static native long new_DataReaderListener2__SWIG_1();
  public final static native long DataReaderListener2_getListener(long jarg1, DataReaderListener2 jarg1_);
  public final static native long DataReaderListener2_getListenerPtr(long jarg1, DataReaderListener2 jarg1_);
  public final static native void DataReaderListener2_setCallback(long jarg1, DataReaderListener2 jarg1_, long jarg2, DataReaderListenerCallBack jarg2_);
  public final static native void DataReaderListener2__callback_set(long jarg1, DataReaderListenerCallBack jarg1_);
  public final static native long DataReaderListener2__callback_get();
  public final static native void delete_DataReaderListener2(long jarg1);
  public final static native long new_Condition2(long jarg1, Condition jarg1_);
  public final static native long Condition2_getCondition(long jarg1, Condition2 jarg1_);
  public final static native boolean Condition2_get_trigger_value(long jarg1, Condition2 jarg1_);
  public final static native void delete_Condition2(long jarg1);
  public final static native long new_ReadCondition2(long jarg1, ReadCondition jarg1_);
  public final static native long ReadCondition2_getReadCondition(long jarg1, ReadCondition2 jarg1_);
  public final static native long ReadCondition2_get_sample_state_mask(long jarg1, ReadCondition2 jarg1_);
  public final static native long ReadCondition2_get_view_state_mask(long jarg1, ReadCondition2 jarg1_);
  public final static native long ReadCondition2_get_instance_state_mask(long jarg1, ReadCondition2 jarg1_);
  public final static native long ReadCondition2_get_datareader(long jarg1, ReadCondition2 jarg1_);
  public final static native void delete_ReadCondition2(long jarg1);
  public final static native long new_QueryCondition2(long jarg1, QueryCondition jarg1_);
  public final static native long QueryCondition2_getQueryCondition(long jarg1, QueryCondition2 jarg1_);
  public final static native String QueryCondition2_get_query_expression(long jarg1, QueryCondition2 jarg1_);
  public final static native int QueryCondition2_get_query_parameters(long jarg1, QueryCondition2 jarg1_, long jarg2, StringSeq jarg2_);
  public final static native int QueryCondition2_set_query_parameters(long jarg1, QueryCondition2 jarg1_, long jarg2, StringSeq jarg2_);
  public final static native void delete_QueryCondition2(long jarg1);
  public final static native long new_StatusCondition2(long jarg1, StatusCondition jarg1_);
  public final static native long StatusCondition2_getStatusCondition(long jarg1, StatusCondition2 jarg1_);
  public final static native long StatusCondition2_get_enabled_statuses(long jarg1, StatusCondition2 jarg1_);
  public final static native int StatusCondition2_set_enabled_statuses(long jarg1, StatusCondition2 jarg1_, long jarg2);
  public final static native long StatusCondition2_get_entity(long jarg1, StatusCondition2 jarg1_);
  public final static native void delete_StatusCondition2(long jarg1);
  public final static native long new_WaitSet2__SWIG_0();
  public final static native long new_WaitSet2__SWIG_1(long jarg1, WaitSet jarg1_);
  public final static native long WaitSet2_getWaitSet(long jarg1, WaitSet2 jarg1_);
  public final static native int WaitSet2_wait(long jarg1, WaitSet2 jarg1_, long jarg2, ConditionSeq2 jarg2_, long jarg3, Duration_t jarg3_);
  public final static native int WaitSet2_attach_condition(long jarg1, WaitSet2 jarg1_, long jarg2, Condition2 jarg2_);
  public final static native int WaitSet2_detach_condition(long jarg1, WaitSet2 jarg1_, long jarg2, Condition2 jarg2_);
  public final static native int WaitSet2_get_conditions(long jarg1, WaitSet2 jarg1_, long jarg2, ConditionSeq jarg2_);
  public final static native void delete_WaitSet2(long jarg1);
  public final static native long new_Entity2(long jarg1, Entity jarg1_);
  public final static native long Entity2_getEntity(long jarg1, Entity2 jarg1_);
  public final static native int Entity2_enable(long jarg1, Entity2 jarg1_);
  public final static native long Entity2_get_statuscondition(long jarg1, Entity2 jarg1_);
  public final static native long Entity2_get_status_changes(long jarg1, Entity2 jarg1_);
  public final static native int Entity2_get_instance_handle(long jarg1, Entity2 jarg1_);
  public final static native void delete_Entity2(long jarg1);
  public final static native long new_TopicDescription2(long jarg1, TopicDescription jarg1_);
  public final static native long TopicDescription2_getTopicDescription(long jarg1, TopicDescription2 jarg1_);
  public final static native String TopicDescription2_get_type_name(long jarg1, TopicDescription2 jarg1_);
  public final static native String TopicDescription2_get_name(long jarg1, TopicDescription2 jarg1_);
  public final static native long TopicDescription2_get_participant(long jarg1, TopicDescription2 jarg1_);
  public final static native void delete_TopicDescription2(long jarg1);
  public final static native long new_Topic2(long jarg1, Topic jarg1_);
  public final static native long Topic2_getTopic(long jarg1, Topic2 jarg1_);
  public final static native int Topic2_set_qos(long jarg1, Topic2 jarg1_, long jarg2, TopicQos jarg2_);
  public final static native int Topic2_get_qos(long jarg1, Topic2 jarg1_, long jarg2, TopicQos jarg2_);
  public final static native int Topic2_set_listener(long jarg1, Topic2 jarg1_, long jarg2, TopicListener2 jarg2_, long jarg3);
  public final static native long Topic2_get_listener(long jarg1, Topic2 jarg1_);
  public final static native int Topic2_get_inconsistent_topic_status(long jarg1, Topic2 jarg1_, long jarg2, InconsistentTopicStatus jarg2_);
  public final static native void delete_Topic2(long jarg1);
  public final static native long new_ContentFilteredTopic2(long jarg1, ContentFilteredTopic jarg1_);
  public final static native long ContentFilteredTopic2_getContentFilteredTopic(long jarg1, ContentFilteredTopic2 jarg1_);
  public final static native String ContentFilteredTopic2_get_filter_expression(long jarg1, ContentFilteredTopic2 jarg1_);
  public final static native int ContentFilteredTopic2_get_expression_parameters(long jarg1, ContentFilteredTopic2 jarg1_, long jarg2, StringSeq jarg2_);
  public final static native int ContentFilteredTopic2_set_expression_parameters(long jarg1, ContentFilteredTopic2 jarg1_, long jarg2, StringSeq jarg2_);
  public final static native long ContentFilteredTopic2_get_related_topic(long jarg1, ContentFilteredTopic2 jarg1_);
  public final static native void delete_ContentFilteredTopic2(long jarg1);
  public final static native long new_MultiTopic2(long jarg1, MultiTopic jarg1_);
  public final static native long MultiTopic2_getMultiTopic(long jarg1, MultiTopic2 jarg1_);
  public final static native String MultiTopic2_get_subscription_expression(long jarg1, MultiTopic2 jarg1_);
  public final static native int MultiTopic2_get_expression_parameters(long jarg1, MultiTopic2 jarg1_, long jarg2, StringSeq jarg2_);
  public final static native int MultiTopic2_set_expression_parameters(long jarg1, MultiTopic2 jarg1_, long jarg2, StringSeq jarg2_);
  public final static native void delete_MultiTopic2(long jarg1);
  public final static native long new_DataReader2(long jarg1, DataReader jarg1_);
  public final static native long DataReader2_getDataReader(long jarg1, DataReader2 jarg1_);
  public final static native long DataReader2_create_readcondition(long jarg1, DataReader2 jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long DataReader2_create_querycondition(long jarg1, DataReader2 jarg1_, long jarg2, long jarg3, long jarg4, String jarg5, long jarg6, StringSeq jarg6_);
  public final static native int DataReader2_delete_readcondition(long jarg1, DataReader2 jarg1_, long jarg2, ReadCondition2 jarg2_);
  public final static native int DataReader2_delete_contained_entities(long jarg1, DataReader2 jarg1_);
  public final static native int DataReader2_set_qos(long jarg1, DataReader2 jarg1_, long jarg2, DataReaderQos jarg2_);
  public final static native int DataReader2_get_qos(long jarg1, DataReader2 jarg1_, long jarg2, DataReaderQos jarg2_);
  public final static native int DataReader2_set_listener(long jarg1, DataReader2 jarg1_, long jarg2, DataReaderListener2 jarg2_, long jarg3);
  public final static native long DataReader2_get_listener(long jarg1, DataReader2 jarg1_);
  public final static native long DataReader2_get_topicdescription(long jarg1, DataReader2 jarg1_);
  public final static native long DataReader2_get_subscriber(long jarg1, DataReader2 jarg1_);
  public final static native int DataReader2_get_sample_rejected_status(long jarg1, DataReader2 jarg1_, long jarg2, SampleRejectedStatus jarg2_);
  public final static native int DataReader2_get_liveliness_changed_status(long jarg1, DataReader2 jarg1_, long jarg2, LivelinessChangedStatus jarg2_);
  public final static native int DataReader2_get_requested_deadline_missed_status(long jarg1, DataReader2 jarg1_, long jarg2, RequestedDeadlineMissedStatus jarg2_);
  public final static native int DataReader2_get_requested_incompatible_qos_status(long jarg1, DataReader2 jarg1_, long jarg2, RequestedIncompatibleQosStatus jarg2_);
  public final static native int DataReader2_get_subscription_matched_status(long jarg1, DataReader2 jarg1_, long jarg2, SubscriptionMatchedStatus jarg2_);
  public final static native int DataReader2_get_sample_lost_status(long jarg1, DataReader2 jarg1_, long jarg2, SampleLostStatus jarg2_);
  public final static native int DataReader2_wait_for_historical_data(long jarg1, DataReader2 jarg1_, long jarg2, Duration_t jarg2_);
  public final static native int DataReader2_get_matched_publications(long jarg1, DataReader2 jarg1_, long jarg2, InstanceHandleSeq jarg2_);
  public final static native int DataReader2_get_matched_publication_data(long jarg1, DataReader2 jarg1_, long jarg2, PublicationBuiltinTopicData jarg2_, int jarg3);
  public final static native void delete_DataReader2(long jarg1);
  public final static native long new_FooDataReader2(long jarg1, FooDataReader jarg1_);
  public final static native long FooDataReader2_getFooDataReader(long jarg1, FooDataReader2 jarg1_);
  public final static native int FooDataReader2_read__SWIG_0(long jarg1, FooDataReader2 jarg1_, long jarg2, FooSeq2 jarg2_, long jarg3, SampleInfoSeq2 jarg3_, int jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int FooDataReader2_take(long jarg1, FooDataReader2 jarg1_, long jarg2, FooSeq2 jarg2_, long jarg3, SampleInfoSeq2 jarg3_, int jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int FooDataReader2_read_w_condition(long jarg1, FooDataReader2 jarg1_, long jarg2, FooSeq2 jarg2_, long jarg3, SampleInfoSeq2 jarg3_, int jarg4, long jarg5, ReadCondition2 jarg5_);
  public final static native int FooDataReader2_take_w_condition(long jarg1, FooDataReader2 jarg1_, long jarg2, FooSeq2 jarg2_, long jarg3, SampleInfoSeq2 jarg3_, int jarg4, long jarg5, ReadCondition2 jarg5_);
  public final static native int FooDataReader2_read_next_sample(long jarg1, FooDataReader2 jarg1_, long jarg2, Foo2 jarg2_, long jarg3, SampleInfo2 jarg3_);
  public final static native int FooDataReader2_take_next_sample(long jarg1, FooDataReader2 jarg1_, long jarg2, Foo2 jarg2_, long jarg3, SampleInfo2 jarg3_);
  public final static native int FooDataReader2_read_instance(long jarg1, FooDataReader2 jarg1_, long jarg2, FooSeq2 jarg2_, long jarg3, SampleInfoSeq2 jarg3_, int jarg4, int jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int FooDataReader2_take_instance(long jarg1, FooDataReader2 jarg1_, long jarg2, FooSeq2 jarg2_, long jarg3, SampleInfoSeq2 jarg3_, int jarg4, int jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int FooDataReader2_read_next_instance(long jarg1, FooDataReader2 jarg1_, long jarg2, FooSeq2 jarg2_, long jarg3, SampleInfoSeq2 jarg3_, int jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int FooDataReader2_take_next_instance(long jarg1, FooDataReader2 jarg1_, long jarg2, FooSeq2 jarg2_, long jarg3, SampleInfoSeq2 jarg3_, int jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int FooDataReader2_get_key_value(long jarg1, FooDataReader2 jarg1_, long jarg2, Foo2 jarg2_, int jarg3);
  public final static native int FooDataReader2_lookup_instance(long jarg1, FooDataReader2 jarg1_, long jarg2, Foo2 jarg2_);
  public final static native int FooDataReader2_read__SWIG_1(long jarg1, FooDataReader2 jarg1_, long jarg2, FooSeq jarg2_, long jarg3, SampleInfoSeq jarg3_, int jarg4, long jarg5, long jarg6, long jarg7);
  public final static native void delete_FooDataReader2(long jarg1);
  public final static native long new_DataWriter2(long jarg1, DataWriter jarg1_);
  public final static native long DataWriter2_getDataWriter(long jarg1, DataWriter2 jarg1_);
  public final static native int DataWriter2_set_qos(long jarg1, DataWriter2 jarg1_, long jarg2, DataWriterQos jarg2_);
  public final static native int DataWriter2_get_qos(long jarg1, DataWriter2 jarg1_, long jarg2, DataWriterQos jarg2_);
  public final static native int DataWriter2_set_listener(long jarg1, DataWriter2 jarg1_, long jarg2, DataWriterListener2 jarg2_, long jarg3);
  public final static native long DataWriter2_get_listener(long jarg1, DataWriter2 jarg1_);
  public final static native long DataWriter2_get_topic(long jarg1, DataWriter2 jarg1_);
  public final static native long DataWriter2_get_publisher(long jarg1, DataWriter2 jarg1_);
  public final static native int DataWriter2_wait_for_acknowledgments(long jarg1, DataWriter2 jarg1_, long jarg2, Duration_t jarg2_);
  public final static native int DataWriter2_get_liveliness_lost_status(long jarg1, DataWriter2 jarg1_, long jarg2, LivelinessLostStatus jarg2_);
  public final static native int DataWriter2_get_offered_deadline_missed_status(long jarg1, DataWriter2 jarg1_, long jarg2, OfferedDeadlineMissedStatus jarg2_);
  public final static native int DataWriter2_get_offered_incompatible_qos_status(long jarg1, DataWriter2 jarg1_, long jarg2, OfferedIncompatibleQosStatus jarg2_);
  public final static native int DataWriter2_get_publication_matched_status(long jarg1, DataWriter2 jarg1_, long jarg2, PublicationMatchedStatus jarg2_);
  public final static native int DataWriter2_assert_liveliness(long jarg1, DataWriter2 jarg1_);
  public final static native int DataWriter2_get_matched_subscriptions(long jarg1, DataWriter2 jarg1_, long jarg2, InstanceHandleSeq jarg2_);
  public final static native int DataWriter2_get_matched_subscription_data(long jarg1, DataWriter2 jarg1_, long jarg2, SubscriptionBuiltinTopicData jarg2_, int jarg3);
  public final static native void delete_DataWriter2(long jarg1);
  public final static native long new_FooDataWriter2(long jarg1, FooDataWriter jarg1_);
  public final static native long FooDataWriter2_getFooDataWriter(long jarg1, FooDataWriter2 jarg1_);
  public final static native int FooDataWriter2_register_instance(long jarg1, FooDataWriter2 jarg1_, long jarg2, Foo2 jarg2_);
  public final static native int FooDataWriter2_register_instance_w_timestamp(long jarg1, FooDataWriter2 jarg1_, long jarg2, FooDataWriter jarg2_, long jarg3, Foo2 jarg3_, long jarg4, Time_t jarg4_);
  public final static native int FooDataWriter2_unregister_instance(long jarg1, FooDataWriter2 jarg1_, long jarg2, Foo2 jarg2_, int jarg3);
  public final static native int FooDataWriter2_unregister_instance_w_timestamp(long jarg1, FooDataWriter2 jarg1_, long jarg2, Foo2 jarg2_, int jarg3, long jarg4, Time_t jarg4_);
  public final static native int FooDataWriter2_write(long jarg1, FooDataWriter2 jarg1_, long jarg2, Foo2 jarg2_, int jarg3);
  public final static native int FooDataWriter2_write_w_timestamp(long jarg1, FooDataWriter2 jarg1_, long jarg2, Foo2 jarg2_, int jarg3, long jarg4, Time_t jarg4_);
  public final static native int FooDataWriter2_dispose(long jarg1, FooDataWriter2 jarg1_, long jarg2, Foo2 jarg2_, int jarg3);
  public final static native int FooDataWriter2_dispose_w_timestamp(long jarg1, FooDataWriter2 jarg1_, long jarg2, Foo2 jarg2_, int jarg3, long jarg4, Time_t jarg4_);
  public final static native int FooDataWriter2_get_key_value(long jarg1, FooDataWriter2 jarg1_, long jarg2, Foo2 jarg2_, int jarg3);
  public final static native int FooDataWriter2_lookup_instance(long jarg1, FooDataWriter2 jarg1_, long jarg2, Foo2 jarg2_);
  public final static native void delete_FooDataWriter2(long jarg1);
  public final static native long new_Subscriber2(long jarg1, Subscriber jarg1_);
  public final static native long Subscriber2_getSubscriber(long jarg1, Subscriber2 jarg1_);
  public final static native long Subscriber2_create_datareader(long jarg1, Subscriber2 jarg1_, long jarg2, Topic2 jarg2_, long jarg3, DataReaderQos jarg3_, long jarg4, DataReaderListener2 jarg4_, long jarg5);
  public final static native int Subscriber2_delete_datareader(long jarg1, Subscriber2 jarg1_, long jarg2, DataReader2 jarg2_);
  public final static native int Subscriber2_delete_contained_entities(long jarg1, Subscriber2 jarg1_);
  public final static native long Subscriber2_lookup_datareader(long jarg1, Subscriber2 jarg1_, String jarg2);
  public final static native int Subscriber2_get_datareaders(long jarg1, Subscriber2 jarg1_, long jarg2, DataReaderSeq jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native int Subscriber2_notify_datareaders(long jarg1, Subscriber2 jarg1_);
  public final static native int Subscriber2_set_qos(long jarg1, Subscriber2 jarg1_, long jarg2, SubscriberQos jarg2_);
  public final static native int Subscriber2_get_qos(long jarg1, Subscriber2 jarg1_, long jarg2, SubscriberQos jarg2_);
  public final static native int Subscriber2_set_listener(long jarg1, Subscriber2 jarg1_, long jarg2, SubscriberListener2 jarg2_, long jarg3);
  public final static native long Subscriber2_get_listener(long jarg1, Subscriber2 jarg1_);
  public final static native int Subscriber2_begin_access(long jarg1, Subscriber2 jarg1_);
  public final static native int Subscriber2_end_access(long jarg1, Subscriber2 jarg1_);
  public final static native long Subscriber2_get_participant(long jarg1, Subscriber2 jarg1_);
  public final static native int Subscriber2_set_default_datareader_qos(long jarg1, Subscriber2 jarg1_, long jarg2, DataReaderQos jarg2_);
  public final static native int Subscriber2_get_default_datareader_qos(long jarg1, Subscriber2 jarg1_, long jarg2, DataReaderQos jarg2_);
  public final static native int Subscriber2_copy_from_topic_qos(long jarg1, Subscriber2 jarg1_, long jarg2, DataReaderQos jarg2_, long jarg3, TopicQos jarg3_);
  public final static native void delete_Subscriber2(long jarg1);
  public final static native long new_Publisher2(long jarg1, Publisher jarg1_);
  public final static native long Publisher2_getPublisher(long jarg1, Publisher2 jarg1_);
  public final static native long Publisher2_create_datawriter(long jarg1, Publisher2 jarg1_, long jarg2, Topic2 jarg2_, long jarg3, DataWriterQos jarg3_, long jarg4, DataWriterListener2 jarg4_, long jarg5);
  public final static native int Publisher2_delete_datawriter(long jarg1, Publisher2 jarg1_, long jarg2, DataWriter2 jarg2_);
  public final static native long Publisher2_lookup_datawriter(long jarg1, Publisher2 jarg1_, String jarg2);
  public final static native int Publisher2_delete_contained_entities(long jarg1, Publisher2 jarg1_);
  public final static native int Publisher2_set_qos(long jarg1, Publisher2 jarg1_, long jarg2, PublisherQos jarg2_);
  public final static native int Publisher2_get_qos(long jarg1, Publisher2 jarg1_, long jarg2, PublisherQos jarg2_);
  public final static native int Publisher2_set_listener(long jarg1, Publisher2 jarg1_, long jarg2, PublisherListener2 jarg2_, long jarg3);
  public final static native long Publisher2_get_listener(long jarg1, Publisher2 jarg1_);
  public final static native int Publisher2_suspend_publications(long jarg1, Publisher2 jarg1_);
  public final static native int Publisher2_resume_publications(long jarg1, Publisher2 jarg1_);
  public final static native int Publisher2_begin_coherent_changes(long jarg1, Publisher2 jarg1_);
  public final static native int Publisher2_end_coherent_changes(long jarg1, Publisher2 jarg1_);
  public final static native int Publisher2_wait_for_acknowledgments(long jarg1, Publisher2 jarg1_, long jarg2, Duration_t jarg2_);
  public final static native long Publisher2_get_participant(long jarg1, Publisher2 jarg1_);
  public final static native int Publisher2_set_default_datawriter_qos(long jarg1, Publisher2 jarg1_, long jarg2, DataWriterQos jarg2_);
  public final static native int Publisher2_get_default_datawriter_qos(long jarg1, Publisher2 jarg1_, long jarg2, DataWriterQos jarg2_);
  public final static native int Publisher2_copy_from_topic_qos(long jarg1, Publisher2 jarg1_, long jarg2, DataWriterQos jarg2_, long jarg3, TopicQos jarg3_);
  public final static native void delete_Publisher2(long jarg1);
  public final static native long new_DomainParticipant2(long jarg1, DomainParticipant jarg1_);
  public final static native long DomainParticipant2_getDomainParticipant(long jarg1, DomainParticipant2 jarg1_);
  public final static native long DomainParticipant2_create_publisher(long jarg1, DomainParticipant2 jarg1_, long jarg2, PublisherQos jarg2_, long jarg3, PublisherListener2 jarg3_, long jarg4);
  public final static native int DomainParticipant2_delete_publisher(long jarg1, DomainParticipant2 jarg1_, long jarg2, Publisher2 jarg2_);
  public final static native long DomainParticipant2_create_subscriber(long jarg1, DomainParticipant2 jarg1_, long jarg2, SubscriberQos jarg2_, long jarg3, SubscriberListener2 jarg3_, long jarg4);
  public final static native int DomainParticipant2_delete_subscriber(long jarg1, DomainParticipant2 jarg1_, long jarg2, Subscriber2 jarg2_);
  public final static native long DomainParticipant2_get_builtin_subscriber(long jarg1, DomainParticipant2 jarg1_);
  public final static native long DomainParticipant2_create_topic(long jarg1, DomainParticipant2 jarg1_, String jarg2, String jarg3, long jarg4, TopicQos jarg4_, long jarg5, TopicListener2 jarg5_, long jarg6);
  public final static native int DomainParticipant2_delete_topic(long jarg1, DomainParticipant2 jarg1_, long jarg2, Topic2 jarg2_);
  public final static native long DomainParticipant2_find_topic(long jarg1, DomainParticipant2 jarg1_, String jarg2, long jarg3, Duration_t jarg3_);
  public final static native long DomainParticipant2_lookup_topicdescription(long jarg1, DomainParticipant2 jarg1_, String jarg2);
  public final static native long DomainParticipant2_create_contentfilteredtopic(long jarg1, DomainParticipant2 jarg1_, String jarg2, long jarg3, Topic2 jarg3_, String jarg4, long jarg5, StringSeq jarg5_);
  public final static native int DomainParticipant2_delete_contentfilteredtopic(long jarg1, DomainParticipant2 jarg1_, long jarg2, ContentFilteredTopic2 jarg2_);
  public final static native long DomainParticipant2_create_multitopic(long jarg1, DomainParticipant2 jarg1_, String jarg2, String jarg3, String jarg4, long jarg5, StringSeq jarg5_);
  public final static native int DomainParticipant2_delete_multitopic(long jarg1, DomainParticipant2 jarg1_, long jarg2, MultiTopic2 jarg2_);
  public final static native int DomainParticipant2_delete_contained_entities(long jarg1, DomainParticipant2 jarg1_);
  public final static native int DomainParticipant2_set_qos(long jarg1, DomainParticipant2 jarg1_, long jarg2, DomainParticipantQos jarg2_);
  public final static native int DomainParticipant2_get_qos(long jarg1, DomainParticipant2 jarg1_, long jarg2, DomainParticipantQos jarg2_);
  public final static native int DomainParticipant2_set_listener(long jarg1, DomainParticipant2 jarg1_, long jarg2, DomainParticipantListener2 jarg2_, long jarg3);
  public final static native long DomainParticipant2_get_listener(long jarg1, DomainParticipant2 jarg1_);
  public final static native int DomainParticipant2_ignore_participant(long jarg1, DomainParticipant2 jarg1_, int jarg2);
  public final static native int DomainParticipant2_ignore_topic(long jarg1, DomainParticipant2 jarg1_, int jarg2);
  public final static native int DomainParticipant2_ignore_publication(long jarg1, DomainParticipant2 jarg1_, int jarg2);
  public final static native int DomainParticipant2_ignore_subscription(long jarg1, DomainParticipant2 jarg1_, int jarg2);
  public final static native int DomainParticipant2_get_domain_id(long jarg1, DomainParticipant2 jarg1_, long jarg2, DomainParticipant jarg2_);
  public final static native int DomainParticipant2_assert_liveliness(long jarg1, DomainParticipant2 jarg1_);
  public final static native int DomainParticipant2_set_default_publisher_qos(long jarg1, DomainParticipant2 jarg1_, long jarg2, PublisherQos jarg2_);
  public final static native int DomainParticipant2_get_default_publisher_qos(long jarg1, DomainParticipant2 jarg1_, long jarg2, PublisherQos jarg2_);
  public final static native int DomainParticipant2_set_default_subscriber_qos(long jarg1, DomainParticipant2 jarg1_, long jarg2, SubscriberQos jarg2_);
  public final static native int DomainParticipant2_get_default_subscriber_qos(long jarg1, DomainParticipant2 jarg1_, long jarg2, SubscriberQos jarg2_);
  public final static native int DomainParticipant2_set_default_topic_qos(long jarg1, DomainParticipant2 jarg1_, long jarg2, TopicQos jarg2_);
  public final static native int DomainParticipant2_get_default_topic_qos(long jarg1, DomainParticipant2 jarg1_, long jarg2, TopicQos jarg2_);
  public final static native int DomainParticipant2_get_discovered_participants(long jarg1, DomainParticipant2 jarg1_, long jarg2, InstanceHandleSeq jarg2_);
  public final static native int DomainParticipant2_get_discovered_participant_data(long jarg1, DomainParticipant2 jarg1_, long jarg2, ParticipantBuiltinTopicData jarg2_, int jarg3);
  public final static native int DomainParticipant2_get_discovered_topics(long jarg1, DomainParticipant2 jarg1_, long jarg2, InstanceHandleSeq jarg2_);
  public final static native int DomainParticipant2_get_discovered_topic_data(long jarg1, DomainParticipant2 jarg1_, long jarg2, TopicBuiltinTopicData jarg2_, int jarg3);
  public final static native boolean DomainParticipant2_contains_entity(long jarg1, DomainParticipant2 jarg1_, int jarg2);
  public final static native int DomainParticipant2_get_current_time(long jarg1, DomainParticipant2 jarg1_, long jarg2, Time_t jarg2_);
  public final static native void delete_DomainParticipant2(long jarg1);
  public final static native long new_DomainParticipantFactory2();
  public final static native long DomainParticipantFactory2_get_instance();
  public final static native long DomainParticipantFactory2_create_participant(long jarg1, DomainParticipantFactory2 jarg1_, int jarg2, long jarg3, DomainParticipantQos jarg3_, long jarg4, DomainParticipantListener2 jarg4_, long jarg5);
  public final static native int DomainParticipantFactory2_delete_participant(long jarg1, DomainParticipantFactory2 jarg1_, long jarg2, DomainParticipant2 jarg2_);
  public final static native long DomainParticipantFactory2_lookup_participant(long jarg1, DomainParticipantFactory2 jarg1_, int jarg2);
  public final static native int DomainParticipantFactory2_set_default_participant_qos(long jarg1, DomainParticipantFactory2 jarg1_, long jarg2, DomainParticipantQos jarg2_);
  public final static native int DomainParticipantFactory2_get_default_participant_qos(long jarg1, DomainParticipantFactory2 jarg1_, long jarg2, DomainParticipantQos jarg2_);
  public final static native int DomainParticipantFactory2_set_qos(long jarg1, DomainParticipantFactory2 jarg1_, long jarg2, DomainParticipantFactoryQos jarg2_);
  public final static native int DomainParticipantFactory2_get_qos(long jarg1, DomainParticipantFactory2 jarg1_, long jarg2, DomainParticipantFactoryQos jarg2_);
  public final static native void delete_DomainParticipantFactory2(long jarg1);
  public final static native long ReadCondition2_SWIGUpcast(long jarg1);
  public final static native long QueryCondition2_SWIGUpcast(long jarg1);
  public final static native long StatusCondition2_SWIGUpcast(long jarg1);
  public final static native long Topic2_SWIGUpcast(long jarg1);
  public final static native long ContentFilteredTopic2_SWIGUpcast(long jarg1);
  public final static native long MultiTopic2_SWIGUpcast(long jarg1);
  public final static native long DataReader2_SWIGUpcast(long jarg1);
  public final static native long FooDataReader2_SWIGUpcast(long jarg1);
  public final static native long DataWriter2_SWIGUpcast(long jarg1);
  public final static native long FooDataWriter2_SWIGUpcast(long jarg1);
  public final static native long Subscriber2_SWIGUpcast(long jarg1);
  public final static native long Publisher2_SWIGUpcast(long jarg1);
  public final static native long DomainParticipant2_SWIGUpcast(long jarg1);

  public static void SwigDirector_DomainParticipantListenerCallBack_on_inconsistent_topic(DomainParticipantListenerCallBack self, long the_topic, long status) {
    self.on_inconsistent_topic((the_topic == 0) ? null : new Topic(the_topic, false), (status == 0) ? null : new InconsistentTopicStatus(status, false));
  }
  public static void SwigDirector_DomainParticipantListenerCallBack_on_offered_deadline_missed(DomainParticipantListenerCallBack self, long writer, long status) {
    self.on_offered_deadline_missed((writer == 0) ? null : new DataWriter(writer, false), (status == 0) ? null : new OfferedDeadlineMissedStatus(status, false));
  }
  public static void SwigDirector_DomainParticipantListenerCallBack_on_offered_incompatible_qos(DomainParticipantListenerCallBack self, long writer, long status) {
    self.on_offered_incompatible_qos((writer == 0) ? null : new DataWriter(writer, false), (status == 0) ? null : new OfferedIncompatibleQosStatus(status, false));
  }
  public static void SwigDirector_DomainParticipantListenerCallBack_on_liveliness_lost(DomainParticipantListenerCallBack self, long writer, long status) {
    self.on_liveliness_lost((writer == 0) ? null : new DataWriter(writer, false), (status == 0) ? null : new LivelinessLostStatus(status, false));
  }
  public static void SwigDirector_DomainParticipantListenerCallBack_on_publication_matched(DomainParticipantListenerCallBack self, long writer, long status) {
    self.on_publication_matched((writer == 0) ? null : new DataWriter(writer, false), (status == 0) ? null : new PublicationMatchedStatus(status, false));
  }
  public static void SwigDirector_DomainParticipantListenerCallBack_on_requested_deadline_missed(DomainParticipantListenerCallBack self, long the_reader, long status) {
    self.on_requested_deadline_missed((the_reader == 0) ? null : new DataReader(the_reader, false), (status == 0) ? null : new RequestedDeadlineMissedStatus(status, false));
  }
  public static void SwigDirector_DomainParticipantListenerCallBack_on_requested_incompatible_qos(DomainParticipantListenerCallBack self, long the_reader, long status) {
    self.on_requested_incompatible_qos((the_reader == 0) ? null : new DataReader(the_reader, false), (status == 0) ? null : new RequestedIncompatibleQosStatus(status, false));
  }
  public static void SwigDirector_DomainParticipantListenerCallBack_on_sample_rejected(DomainParticipantListenerCallBack self, long the_reader, long status) {
    self.on_sample_rejected((the_reader == 0) ? null : new DataReader(the_reader, false), (status == 0) ? null : new SampleRejectedStatus(status, false));
  }
  public static void SwigDirector_DomainParticipantListenerCallBack_on_liveliness_changed(DomainParticipantListenerCallBack self, long the_reader, long status) {
    self.on_liveliness_changed((the_reader == 0) ? null : new DataReader(the_reader, false), (status == 0) ? null : new LivelinessChangedStatus(status, false));
  }
  public static void SwigDirector_DomainParticipantListenerCallBack_on_data_available(DomainParticipantListenerCallBack self, long p_reader) {
    self.on_data_available((p_reader == 0) ? null : new DataReader(p_reader, false));
  }
  public static void SwigDirector_DomainParticipantListenerCallBack_on_subscription_matched(DomainParticipantListenerCallBack self, long the_reader, long status) {
    self.on_subscription_matched((the_reader == 0) ? null : new DataReader(the_reader, false), (status == 0) ? null : new SubscriptionMatchedStatus(status, false));
  }
  public static void SwigDirector_DomainParticipantListenerCallBack_on_sample_lost(DomainParticipantListenerCallBack self, long the_reader, long status) {
    self.on_sample_lost((the_reader == 0) ? null : new DataReader(the_reader, false), (status == 0) ? null : new SampleLostStatus(status, false));
  }
  public static void SwigDirector_DomainParticipantListenerCallBack_on_data_on_readers(DomainParticipantListenerCallBack self, long p_subscriber) {
    self.on_data_on_readers((p_subscriber == 0) ? null : new Subscriber(p_subscriber, false));
  }
  public static void SwigDirector_PublisherListenerCallBack_on_offered_deadline_missed(PublisherListenerCallBack self, long writer, long status) {
    self.on_offered_deadline_missed((writer == 0) ? null : new DataWriter(writer, false), (status == 0) ? null : new OfferedDeadlineMissedStatus(status, false));
  }
  public static void SwigDirector_PublisherListenerCallBack_on_offered_incompatible_qos(PublisherListenerCallBack self, long writer, long status) {
    self.on_offered_incompatible_qos((writer == 0) ? null : new DataWriter(writer, false), (status == 0) ? null : new OfferedIncompatibleQosStatus(status, false));
  }
  public static void SwigDirector_PublisherListenerCallBack_on_liveliness_lost(PublisherListenerCallBack self, long writer, long status) {
    self.on_liveliness_lost((writer == 0) ? null : new DataWriter(writer, false), (status == 0) ? null : new LivelinessLostStatus(status, false));
  }
  public static void SwigDirector_PublisherListenerCallBack_on_publication_matched(PublisherListenerCallBack self, long writer, long status) {
    self.on_publication_matched((writer == 0) ? null : new DataWriter(writer, false), (status == 0) ? null : new PublicationMatchedStatus(status, false));
  }
  public static void SwigDirector_TopicListenerCallBack_on_inconsistent_topic(TopicListenerCallBack self, long the_topic, long status) {
    self.on_inconsistent_topic((the_topic == 0) ? null : new Topic(the_topic, false), (status == 0) ? null : new InconsistentTopicStatus(status, false));
  }
  public static void SwigDirector_DataWriterListenerCallBack_on_offered_deadline_missed(DataWriterListenerCallBack self, long writer, long status) {
    self.on_offered_deadline_missed((writer == 0) ? null : new DataWriter(writer, false), (status == 0) ? null : new OfferedDeadlineMissedStatus(status, false));
  }
  public static void SwigDirector_DataWriterListenerCallBack_on_offered_incompatible_qos(DataWriterListenerCallBack self, long writer, long status) {
    self.on_offered_incompatible_qos((writer == 0) ? null : new DataWriter(writer, false), (status == 0) ? null : new OfferedIncompatibleQosStatus(status, false));
  }
  public static void SwigDirector_DataWriterListenerCallBack_on_liveliness_lost(DataWriterListenerCallBack self, long writer, long status) {
    self.on_liveliness_lost((writer == 0) ? null : new DataWriter(writer, false), (status == 0) ? null : new LivelinessLostStatus(status, false));
  }
  public static void SwigDirector_DataWriterListenerCallBack_on_publication_matched(DataWriterListenerCallBack self, long writer, long status) {
    self.on_publication_matched((writer == 0) ? null : new DataWriter(writer, false), (status == 0) ? null : new PublicationMatchedStatus(status, false));
  }
  public static void SwigDirector_DataReaderListenerCallBack_on_inconsistent_topic(DataReaderListenerCallBack self, long the_topic, long status) {
    self.on_inconsistent_topic((the_topic == 0) ? null : new Topic(the_topic, false), (status == 0) ? null : new InconsistentTopicStatus(status, false));
  }
  public static void SwigDirector_DataReaderListenerCallBack_on_offered_deadline_missed(DataReaderListenerCallBack self, long writer, long status) {
    self.on_offered_deadline_missed((writer == 0) ? null : new DataWriter(writer, false), (status == 0) ? null : new OfferedDeadlineMissedStatus(status, false));
  }
  public static void SwigDirector_DataReaderListenerCallBack_on_offered_incompatible_qos(DataReaderListenerCallBack self, long writer, long status) {
    self.on_offered_incompatible_qos((writer == 0) ? null : new DataWriter(writer, false), (status == 0) ? null : new OfferedIncompatibleQosStatus(status, false));
  }
  public static void SwigDirector_DataReaderListenerCallBack_on_liveliness_lost(DataReaderListenerCallBack self, long writer, long status) {
    self.on_liveliness_lost((writer == 0) ? null : new DataWriter(writer, false), (status == 0) ? null : new LivelinessLostStatus(status, false));
  }
  public static void SwigDirector_DataReaderListenerCallBack_on_publication_matched(DataReaderListenerCallBack self, long writer, long status) {
    self.on_publication_matched((writer == 0) ? null : new DataWriter(writer, false), (status == 0) ? null : new PublicationMatchedStatus(status, false));
  }
  public static void SwigDirector_DataReaderListenerCallBack_on_requested_deadline_missed(DataReaderListenerCallBack self, long the_reader, long status) {
    self.on_requested_deadline_missed((the_reader == 0) ? null : new DataReader(the_reader, false), (status == 0) ? null : new RequestedDeadlineMissedStatus(status, false));
  }
  public static void SwigDirector_DataReaderListenerCallBack_on_requested_incompatible_qos(DataReaderListenerCallBack self, long the_reader, long status) {
    self.on_requested_incompatible_qos((the_reader == 0) ? null : new DataReader(the_reader, false), (status == 0) ? null : new RequestedIncompatibleQosStatus(status, false));
  }
  public static void SwigDirector_DataReaderListenerCallBack_on_sample_rejected(DataReaderListenerCallBack self, long the_reader, long status) {
    self.on_sample_rejected((the_reader == 0) ? null : new DataReader(the_reader, false), (status == 0) ? null : new SampleRejectedStatus(status, false));
  }
  public static void SwigDirector_DataReaderListenerCallBack_on_liveliness_changed(DataReaderListenerCallBack self, long the_reader, long status) {
    self.on_liveliness_changed((the_reader == 0) ? null : new DataReader(the_reader, false), (status == 0) ? null : new LivelinessChangedStatus(status, false));
  }
  public static void SwigDirector_DataReaderListenerCallBack_on_data_available(DataReaderListenerCallBack self, long p_reader) {
    self.on_data_available((p_reader == 0) ? null : new DataReader(p_reader, false));
  }
  public static void SwigDirector_DataReaderListenerCallBack_on_subscription_matched(DataReaderListenerCallBack self, long the_reader, long status) {
    self.on_subscription_matched((the_reader == 0) ? null : new DataReader(the_reader, false), (status == 0) ? null : new SubscriptionMatchedStatus(status, false));
  }
  public static void SwigDirector_DataReaderListenerCallBack_on_sample_lost(DataReaderListenerCallBack self, long the_reader, long status) {
    self.on_sample_lost((the_reader == 0) ? null : new DataReader(the_reader, false), (status == 0) ? null : new SampleLostStatus(status, false));
  }
  public static void SwigDirector_DataReaderListenerCallBack_on_data_on_readers(DataReaderListenerCallBack self, long p_subscriber) {
    self.on_data_on_readers((p_subscriber == 0) ? null : new Subscriber(p_subscriber, false));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
